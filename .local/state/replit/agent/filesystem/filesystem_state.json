{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nWebRevamp Studio is a modern website redesign agency focused on transforming outdated websites into fast, mobile-first experiences for Indian small and medium businesses (SMBs). The application is a full-stack portfolio website showcasing services like website redesign, responsive development, performance optimization, and ongoing maintenance. It features a contact form for lead generation, portfolio case studies with before/after comparisons, and comprehensive service pages designed to convert visitors into clients.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React with TypeScript using Vite as the build tool\n- **Routing**: Wouter for lightweight client-side routing\n- **UI Components**: Radix UI primitives with shadcn/ui component library\n- **Styling**: Tailwind CSS with custom design tokens and CSS variables\n- **Animations**: Framer Motion for smooth page transitions and micro-interactions\n- **State Management**: TanStack Query for server state management and React hooks for local state\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js server\n- **Type System**: TypeScript throughout the entire application\n- **Data Storage**: In-memory storage with interface abstraction for easy database migration\n- **API Design**: RESTful endpoints with proper error handling and request logging\n- **Session Management**: Express session middleware with PostgreSQL session store configuration\n\n## Component Structure\n- **Layout System**: Consistent header/footer layout with accessibility features\n- **UI Components**: Reusable component library following atomic design principles\n- **Page Components**: Route-based components for different sections (Home, Services, Work, About, Contact)\n- **Custom Components**: Specialized components like BeforeAfterSlider, ContactForm, and CTAButton\n\n## Performance & SEO\n- **Core Web Vitals**: Optimized for performance metrics with lazy loading and efficient bundling\n- **SEO Implementation**: Dynamic meta tags, structured data, and Google Analytics integration\n- **Accessibility**: WCAG compliance with proper ARIA labels, keyboard navigation, and screen reader support\n- **Mobile-First**: Responsive design with touch-friendly interactions and mobile menu\n\n## Development Tooling\n- **Build System**: Vite with hot module replacement and optimized production builds\n- **Code Quality**: ESLint and TypeScript for code consistency and type safety\n- **Styling**: PostCSS with Tailwind CSS and autoprefixer for cross-browser compatibility\n\n# External Dependencies\n\n## Core Framework Dependencies\n- **React Ecosystem**: React, React DOM, React Query for state management\n- **Routing**: Wouter for client-side navigation\n- **Build Tools**: Vite for development and bundling, esbuild for server compilation\n\n## UI and Styling\n- **Component Library**: Radix UI primitives for accessible base components\n- **Styling**: Tailwind CSS with custom configuration and design tokens\n- **Icons**: Lucide React for consistent iconography\n- **Animations**: Framer Motion for smooth transitions and interactions\n\n## Forms and Validation\n- **Form Handling**: React Hook Form for efficient form state management\n- **Validation**: Zod for runtime type validation and schema definition\n- **Form Resolvers**: Hookform resolvers for Zod integration\n\n## Database and ORM\n- **ORM**: Drizzle ORM configured for PostgreSQL with schema definitions\n- **Database Driver**: Neon Database serverless driver for PostgreSQL connections\n- **Migrations**: Drizzle Kit for database schema migrations\n\n## Development and Analytics\n- **Analytics**: Google Analytics 4 integration for user tracking\n- **Development**: Replit-specific plugins for development environment\n- **Session Storage**: PostgreSQL session store for user sessions\n\n## Email and Communication\n- **Email Service**: Resend API configured for transactional emails (contact form submissions)\n- **Contact Methods**: WhatsApp integration for direct communication\n\n## Server Infrastructure\n- **Web Server**: Express.js with middleware for JSON parsing and static file serving\n- **Development Server**: Vite development server with proxy configuration\n- **Production**: Node.js server with static file serving and API routes","size_bytes":4395},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n        '2xl': '1rem',\n        '3xl': '1.5rem',\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        success: \"var(--success)\",\n        warning: \"var(--warning)\",\n        dark: \"var(--dark)\",\n        'gray-text': \"var(--gray-text)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        sora: [\"var(--font-sora)\"],\n      },\n      animation: {\n        'fade-in': 'fadeIn 0.6s ease-out',\n        'slide-up': 'slideUp 0.6s ease-out',\n        'scale-in': 'scaleIn 0.3s ease-out',\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n      keyframes: {\n        fadeIn: {\n          from: { opacity: '0' },\n          to: { opacity: '1' },\n        },\n        slideUp: {\n          from: { opacity: '0', transform: 'translateY(30px)' },\n          to: { opacity: '1', transform: 'translateY(0)' },\n        },\n        scaleIn: {\n          from: { opacity: '0', transform: 'scale(0.95)' },\n          to: { opacity: '1', transform: 'scale(1)' },\n        },\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3518},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"client/env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_GA_MEASUREMENT_ID: string;\n  readonly VITE_RESEND_API_KEY: string;\n  readonly VITE_SITE_URL: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}\n","size_bytes":241},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { z } from \"zod\";\nimport { storage } from \"./storage\";\nimport { insertContactSubmissionSchema } from \"@shared/schema\";\n\n// Email service simulation (replace with actual Resend implementation)\nasync function sendEmail(to: string, subject: string, html: string) {\n  // In a real implementation, you would use Resend API here\n  // For now, we'll log the email that would be sent\n  console.log('Email would be sent to:', to);\n  console.log('Subject:', subject);\n  console.log('Content:', html);\n  \n  // Simulate API call delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  return { success: true, messageId: 'mock-message-id' };\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission endpoint\n  app.post('/api/contact', async (req, res) => {\n    try {\n      // Check for honeypot (spam protection)\n      if (req.body.website) {\n        return res.status(400).json({ \n          success: false, \n          message: 'Spam submission detected' \n        });\n      }\n\n      // Validate request body\n      const validatedData = insertContactSubmissionSchema.parse(req.body);\n      \n      // Store the contact submission\n      const contactSubmission = await storage.createContactSubmission(validatedData);\n      \n      // Prepare email content\n      const emailSubject = `New Website Audit Request from ${validatedData.name}`;\n      const emailContent = `\n        <h2>New Contact Form Submission</h2>\n        <p><strong>Name:</strong> ${validatedData.name}</p>\n        <p><strong>Email:</strong> ${validatedData.email}</p>\n        <p><strong>Company:</strong> ${validatedData.company || 'Not provided'}</p>\n        <p><strong>Current Website:</strong> ${validatedData.currentWebsite || 'Not provided'}</p>\n        <p><strong>Message:</strong></p>\n        <p>${validatedData.message}</p>\n        <hr>\n        <p><em>Submitted at: ${new Date().toLocaleString()}</em></p>\n      `;\n      \n      // Send notification email to admin\n      const adminEmail = process.env.MAIL_TO || 'hello@webrevampstudio.com';\n      await sendEmail(adminEmail, emailSubject, emailContent);\n      \n      // Send confirmation email to user\n      const userEmailSubject = 'Thank you for your website audit request';\n      const userEmailContent = `\n        <h2>Thank you for contacting WebRevamp Studio!</h2>\n        <p>Hi ${validatedData.name},</p>\n        <p>We've received your website audit request and we're excited to help transform your online presence.</p>\n        <p><strong>What happens next:</strong></p>\n        <ul>\n          <li>We'll review your current website and business goals</li>\n          <li>Our team will create a detailed Loom video audit</li>\n          <li>You'll receive the audit within 24-48 hours</li>\n          <li>We'll follow up to schedule a consultation call</li>\n        </ul>\n        <p>If you have any urgent questions, feel free to reach out to us directly:</p>\n        <ul>\n          <li>Email: hello@webrevampstudio.com</li>\n          <li>Phone: +91 98765 43210</li>\n          <li>WhatsApp: <a href=\"https://wa.me/919876543210\">Chat with us</a></li>\n        </ul>\n        <p>Best regards,<br>The WebRevamp Studio Team</p>\n      `;\n      \n      await sendEmail(validatedData.email, userEmailSubject, userEmailContent);\n      \n      res.json({ \n        success: true, \n        message: 'Contact form submitted successfully',\n        id: contactSubmission.id \n      });\n      \n    } catch (error) {\n      console.error('Contact form error:', error);\n      \n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ \n          success: false, \n          message: 'Validation error',\n          errors: error.errors \n        });\n      }\n      \n      res.status(500).json({ \n        success: false, \n        message: 'Internal server error' \n      });\n    }\n  });\n\n  // Health check endpoint\n  app.get('/api/health', (req, res) => {\n    res.json({ status: 'ok', timestamp: new Date().toISOString() });\n  });\n\n  // Get contact submissions (admin only - would need authentication in real app)\n  app.get('/api/contact-submissions', async (req, res) => {\n    try {\n      const submissions = await storage.getAllContactSubmissions();\n      res.json({ success: true, data: submissions });\n    } catch (error) {\n      console.error('Error fetching contact submissions:', error);\n      res.status(500).json({ \n        success: false, \n        message: 'Internal server error' \n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":4634},"server/storage.ts":{"content":"import { type User, type InsertUser, type ContactSubmission, type InsertContactSubmission } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createContactSubmission(submission: InsertContactSubmission): Promise<ContactSubmission>;\n  getAllContactSubmissions(): Promise<ContactSubmission[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contactSubmissions: Map<string, ContactSubmission>;\n\n  constructor() {\n    this.users = new Map();\n    this.contactSubmissions = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContactSubmission(insertSubmission: InsertContactSubmission): Promise<ContactSubmission> {\n    const id = randomUUID();\n    const submission: ContactSubmission = { \n      ...insertSubmission,\n      company: insertSubmission.company ?? null,\n      currentWebsite: insertSubmission.currentWebsite ?? null,\n      id, \n      createdAt: new Date() \n    };\n    this.contactSubmissions.set(id, submission);\n    return submission;\n  }\n\n  async getAllContactSubmissions(): Promise<ContactSubmission[]> {\n    return Array.from(this.contactSubmissions.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1873},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  company: text(\"company\"),\n  currentWebsite: text(\"current_website\"),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactSubmissionSchema = createInsertSchema(contactSubmissions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertContactSubmission = z.infer<typeof insertContactSubmissionSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\n","size_bytes":1253},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { useEffect } from \"react\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { Layout } from \"@/components/layout/layout\";\nimport { initGA } from \"./lib/analytics\";\nimport { useAnalytics } from \"./hooks/use-analytics\";\nimport { ThemeProvider } from \"@/contexts/ThemeContext\";\n\n// Pages\nimport Home from \"@/pages/home.tsx\";\nimport Services from \"@/pages/services.tsx\";\nimport Work from \"@/pages/work.tsx\";\nimport WorkDetail from \"@/pages/work-detail.tsx\";\nimport About from \"@/pages/about.tsx\";\nimport Contact from \"@/pages/contact.tsx\";\nimport Privacy from \"@/pages/privacy.tsx\";\nimport Terms from \"@/pages/terms.tsx\";\nimport NotFound from \"@/pages/not-found.tsx\";\n\nfunction Router() {\n  // Track page views when routes change\n  useAnalytics();\n  \n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/services\" component={Services} />\n        <Route path=\"/work\" component={Work} />\n        <Route path=\"/work/:slug\" component={WorkDetail} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/privacy\" component={Privacy} />\n        <Route path=\"/terms\" component={Terms} />\n        <Route component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nfunction App() {\n  // Initialize Google Analytics when app loads\n  useEffect(() => {\n    if (!import.meta.env.VITE_GA_MEASUREMENT_ID) {\n      console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    } else {\n      initGA();\n    }\n  }, []);\n\n  return (\n    <ThemeProvider>\n      <QueryClientProvider client={queryClient}>\n        <TooltipProvider>\n          <Router />\n          <Toaster />\n        </TooltipProvider>\n      </QueryClientProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2026},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Sora:wght@600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(210 25% 7.8431%);\n  --card: hsl(180 6.6667% 97.0588%);\n  --card-foreground: hsl(210 25% 7.8431%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(210 25% 7.8431%);\n  --primary: hsl(213.8 88.3% 53.1%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(210 25% 7.8431%);\n  --secondary-foreground: hsl(0 0% 100%);\n  --muted: hsl(240 1.9608% 90%);\n  --muted-foreground: hsl(210 25% 7.8431%);\n  --accent: hsl(211.5789 51.3514% 92.7451%);\n  --accent-foreground: hsl(213.8 88.3% 53.1%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(201.4286 30.4348% 90.9804%);\n  --input: hsl(200 23.0769% 97.4510%);\n  --ring: hsl(213.8 88.3% 53.1%);\n  --success: hsl(153.4 60.4% 39.6%);\n  --warning: hsl(42.0290 92.8251% 56.2745%);\n  --dark: hsl(220.9 39.3% 11%);\n  --gray-text: hsl(215.4 16.3% 46.9%);\n  --radius: 1rem;\n  --font-sans: 'Inter', sans-serif;\n  --font-sora: 'Sora', sans-serif;\n}\n\n.dark {\n  --background: hsl(0 0% 0%);\n  --foreground: hsl(200 6.6667% 91.1765%);\n  --card: hsl(228 9.8039% 10%);\n  --card-foreground: hsl(0 0% 85.0980%);\n  --popover: hsl(0 0% 0%);\n  --popover-foreground: hsl(200 6.6667% 91.1765%);\n  --primary: hsl(213.8 88.3% 53.1%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(195.0000 15.3846% 94.9020%);\n  --secondary-foreground: hsl(210 25% 7.8431%);\n  --muted: hsl(0 0% 9.4118%);\n  --muted-foreground: hsl(210 3.3898% 46.2745%);\n  --accent: hsl(205.7143 70% 7.8431%);\n  --accent-foreground: hsl(213.8 88.3% 53.1%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207.6923 27.6596% 18.4314%);\n  --ring: hsl(213.8 88.3% 53.1%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @apply font-sora;\n  }\n}\n\n@keyframes gradient-float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-20px) rotate(180deg); }\n}\n\n@keyframes pulse-glow {\n  0%, 100% { \n    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);\n    transform: scale(1);\n  }\n  50% { \n    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);\n    transform: scale(1.05);\n  }\n}\n\n@keyframes shimmer {\n  0% { background-position: -200% center; }\n  100% { background-position: 200% center; }\n}\n\n@keyframes bounce-gentle {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-5px); }\n}\n\n@keyframes rotate-slow {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n@layer components {\n  .before-after-container {\n    position: relative;\n    overflow: hidden;\n    border-radius: 1rem;\n  }\n  \n  .before-after-slider {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    width: 4px;\n    height: 100%;\n    background: var(--primary);\n    cursor: col-resize;\n    z-index: 10;\n  }\n  \n  .slider-button {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 40px;\n    height: 40px;\n    background: var(--primary);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    font-size: 16px;\n  }\n  \n  .after-image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    clip-path: polygon(50% 0%, 100% 0%, 100% 100%, 50% 100%);\n  }\n}\n\n@layer utilities {\n  .font-sora {\n    font-family: var(--font-sora);\n  }\n  \n  .text-primary {\n    color: var(--primary);\n  }\n  \n  .text-success {\n    color: var(--success);\n  }\n  \n  .text-warning {\n    color: var(--warning);\n  }\n  \n  .text-dark {\n    color: var(--dark);\n  }\n  \n  .text-gray-text {\n    color: var(--gray-text);\n  }\n  \n  .bg-primary {\n    background-color: var(--primary);\n  }\n  \n  .bg-success {\n    background-color: var(--success);\n  }\n  \n  .bg-dark {\n    background-color: var(--dark);\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .animate-fade-in,\n  .animate-slide-up,\n  .animate-scale-in {\n    animation: none;\n  }\n}\n","size_bytes":4286},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/Hero.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\nimport { CTAButton } from '@/components/ui/cta-button';\nimport { Link } from 'wouter';\n\nexport function Hero() {\n  const fadeInLeft = {\n    initial: { opacity: 0, x: -50 },\n    animate: { opacity: 1, x: 0 },\n    transition: { duration: 0.8, ease: \"easeOut\" }\n  };\n\n  const fadeInRight = {\n    initial: { opacity: 0, x: 50 },\n    animate: { opacity: 1, x: 0 },\n    transition: { duration: 0.8, ease: \"easeOut\", delay: 0.2 }\n  };\n\n  const staggerContainer = {\n    animate: {\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const staggerItem = {\n    initial: { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 }\n  };\n\n  return (\n    <section className=\"bg-white py-20 lg:py-32 overflow-hidden\">\n      <div className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"grid lg:grid-cols-2 gap-12 lg:gap-16 items-center\">\n          \n          {/* Left Column - Content */}\n          <motion.div \n            className=\"space-y-8\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={staggerContainer}\n          >\n            <motion.h1 \n              className=\"text-4xl md:text-5xl font-bold text-dark leading-tight\"\n              variants={staggerItem}\n            >\n              We build modern,{' '}\n              <span className=\"text-primary\">responsive websites</span>\n            </motion.h1>\n            \n            <motion.p \n              className=\"text-xl text-gray-text leading-relaxed max-w-lg\"\n              variants={staggerItem}\n            >\n              From outdated to outstanding — your website will shine on any device.\n            </motion.p>\n            \n            <motion.div \n              className=\"flex flex-col sm:flex-row gap-4\"\n              variants={staggerItem}\n            >\n              <Link href=\"/contact\">\n                <CTAButton size=\"lg\" className=\"px-8 py-4 text-lg rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\">\n                  Get a Free Audit\n                </CTAButton>\n              </Link>\n              \n              <Link href=\"/work\">\n                <Button \n                  variant=\"outline\" \n                  size=\"lg\" \n                  className=\"px-8 py-4 text-lg rounded-xl border-2 hover:bg-primary hover:text-white hover:border-primary transition-all duration-300\"\n                >\n                  View Work\n                </Button>\n              </Link>\n            </motion.div>\n          </motion.div>\n\n          {/* Right Column - Device Mockups */}\n          <motion.div \n            className=\"relative\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={fadeInRight}\n          >\n            {/* Laptop Mockup */}\n            <motion.div \n              className=\"relative z-10\"\n              whileHover={{ scale: 1.02 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"bg-gray-800 rounded-t-2xl p-3 shadow-2xl\">\n                {/* Laptop Screen */}\n                <div className=\"bg-white rounded-lg overflow-hidden aspect-[16/10]\">\n                  {/* Actual Website Preview */}\n                  <div className=\"w-full h-full bg-white\">\n                    {/* Browser Header */}\n                    <div className=\"bg-gray-100 h-4 flex items-center px-2 rounded-t-lg\">\n                      <div className=\"flex space-x-1\">\n                        <div className=\"w-1.5 h-1.5 bg-red-500 rounded-full\"></div>\n                        <div className=\"w-1.5 h-1.5 bg-yellow-500 rounded-full\"></div>\n                        <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\"></div>\n                      </div>\n                      <div className=\"ml-3 bg-gray-200 rounded px-2 py-0.5 text-xs text-gray-600\">\n                        localhost:5000\n                      </div>\n                    </div>\n                    \n                    {/* Website Content */}\n                    <div className=\"h-full bg-white\">\n                      {/* Navigation */}\n                      <div className=\"bg-white border-b border-gray-200 h-6 flex items-center px-3\">\n                        <div className=\"text-blue-600 font-bold text-sm\">WebRevamp Studio</div>\n                        <div className=\"ml-auto flex space-x-3 text-xs text-gray-600\">\n                          <span>Home</span>\n                          <span>Services</span>\n                          <span>Work</span>\n                          <span>About</span>\n                          <span>Contact</span>\n                        </div>\n                      </div>\n                      \n                      {/* Hero Section */}\n                      <div className=\"p-3 grid grid-cols-2 gap-3 h-full\">\n                        {/* Left Column */}\n                        <div className=\"bg-gray-50 rounded p-2\">\n                          <h1 className=\"text-sm font-bold text-gray-900 mb-1 leading-tight\">\n                            We build modern, <span className=\"text-blue-600\">responsive websites</span>\n                          </h1>\n                          <p className=\"text-xs text-gray-600 mb-2 leading-tight\">\n                            From outdated to outstanding — your website will shine on any device.\n                          </p>\n                          <div className=\"flex space-x-1\">\n                            <div className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs font-medium\">Get Audit</div>\n                            <div className=\"border border-blue-600 text-blue-600 px-2 py-1 rounded text-xs font-medium\">View Work</div>\n                          </div>\n                        </div>\n                        \n                        {/* Right Column - Device Mockups */}\n                        <div className=\"bg-gray-50 rounded p-2 flex items-center justify-center\">\n                          {/* Mini Laptop */}\n                          <div className=\"bg-gray-800 rounded p-1 mr-2\">\n                            <div className=\"bg-white rounded w-10 h-6\">\n                              <div className=\"bg-gray-100 h-1 rounded-t flex items-center px-1\">\n                                <div className=\"w-0.5 h-0.5 bg-red-400 rounded-full mr-0.5\"></div>\n                                <div className=\"w-0.5 h-0.5 bg-yellow-400 rounded-full mr-0.5\"></div>\n                                <div className=\"w-0.5 h-0.5 bg-green-400 rounded-full\"></div>\n                              </div>\n                              <div className=\"p-1\">\n                                <div className=\"bg-blue-600 w-4 h-0.5 rounded mb-1\"></div>\n                                <div className=\"bg-gray-300 w-3 h-0.5 mb-0.5\"></div>\n                                <div className=\"bg-gray-300 w-4 h-0.5 mb-1\"></div>\n                                <div className=\"flex space-x-0.5\">\n                                  <div className=\"bg-gray-200 w-2 h-1 rounded\"></div>\n                                  <div className=\"bg-gray-200 w-2 h-1 rounded\"></div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          {/* Mini Mobile */}\n                          <div className=\"bg-gray-800 rounded-lg p-0.5 w-4 h-8\">\n                            <div className=\"bg-white rounded w-full h-full\">\n                              <div className=\"bg-gray-800 w-2 h-1 rounded-b mx-auto\"></div>\n                              <div className=\"p-0.5 space-y-0.5\">\n                                <div className=\"bg-blue-600 w-full h-0.5 rounded\"></div>\n                                <div className=\"bg-gray-300 w-2.5 h-0.5\"></div>\n                                <div className=\"bg-gray-300 w-2 h-0.5\"></div>\n                                <div className=\"bg-blue-600 w-2 h-0.5 rounded\"></div>\n                                <div className=\"bg-gray-200 w-full h-1 rounded\"></div>\n                                <div className=\"bg-gray-200 w-full h-1 rounded\"></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Laptop Base */}\n              <div className=\"bg-gray-300 h-4 rounded-b-2xl shadow-lg relative\">\n                <div className=\"absolute inset-x-0 top-1 h-2 bg-gray-400 rounded-b-lg mx-20\"></div>\n              </div>\n            </motion.div>\n\n            {/* Mobile Mockup */}\n            <motion.div \n              className=\"absolute -bottom-8 -right-4 lg:-right-8 z-20\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.5 }}\n              whileHover={{ scale: 1.05, y: -5 }}\n            >\n              <div className=\"bg-gray-900 rounded-3xl p-2 shadow-2xl w-28 sm:w-32\">\n                {/* Mobile Screen */}\n                <div className=\"bg-white rounded-2xl overflow-hidden aspect-[9/19.5]\">\n                  {/* Actual Mobile Website Preview */}\n                  <div className=\"w-full h-full bg-white\">\n                    {/* Status Bar */}\n                    <div className=\"bg-black text-white text-xs h-6 flex items-center justify-between px-2\">\n                      <span>9:41</span>\n                      <div className=\"w-4 h-2 bg-black rounded-sm\">\n                        <div className=\"w-2 h-1 bg-gray-300 rounded\"></div>\n                      </div>\n                      <span>100%</span>\n                    </div>\n                    \n                    {/* Notch */}\n                    <div className=\"bg-black w-8 h-4 rounded-b-2xl mx-auto\"></div>\n                    \n                    {/* Mobile Header */}\n                    <div className=\"bg-white border-b border-gray-200 h-12 flex items-center px-3\">\n                      <div className=\"text-blue-600 font-bold text-sm\">WebRevamp Studio</div>\n                      <div className=\"ml-auto\">\n                        <div className=\"w-6 h-6 flex flex-col justify-center space-y-1\">\n                          <div className=\"w-4 h-0.5 bg-gray-600\"></div>\n                          <div className=\"w-4 h-0.5 bg-gray-600\"></div>\n                          <div className=\"w-4 h-0.5 bg-gray-600\"></div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Mobile Hero Content */}\n                    <div className=\"p-3 bg-white h-full\">\n                      {/* Stacked Mobile Layout */}\n                      <div className=\"bg-gray-50 rounded p-3 mb-3\">\n                        <h1 className=\"text-lg font-bold text-gray-900 mb-2 leading-tight\">\n                          We build modern, <span className=\"text-blue-600\">responsive websites</span>\n                        </h1>\n                        <p className=\"text-sm text-gray-600 mb-3 leading-relaxed\">\n                          From outdated to outstanding — your website will shine on any device.\n                        </p>\n                        <div className=\"space-y-2\">\n                          <div className=\"bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium text-center\">\n                            Get a Free Audit\n                          </div>\n                          <div className=\"border-2 border-blue-600 text-blue-600 px-4 py-2 rounded-lg text-sm font-medium text-center\">\n                            View Work\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Device Preview Section */}\n                      <div className=\"bg-gray-50 rounded p-3\">\n                        <h3 className=\"text-sm font-semibold mb-2 text-center\">See the difference</h3>\n                        <div className=\"flex justify-center space-x-3\">\n                          {/* Tiny Laptop Preview */}\n                          <div className=\"bg-gray-800 rounded p-1\">\n                            <div className=\"bg-white rounded w-12 h-8\">\n                              <div className=\"bg-gray-100 h-1.5 rounded-t\"></div>\n                              <div className=\"p-1\">\n                                <div className=\"bg-blue-600 w-4 h-1 rounded mb-1\"></div>\n                                <div className=\"bg-gray-300 w-3 h-0.5 mb-0.5\"></div>\n                                <div className=\"bg-gray-300 w-4 h-0.5\"></div>\n                              </div>\n                            </div>\n                          </div>\n                          \n                          {/* Tiny Mobile Preview */}\n                          <div className=\"bg-gray-800 rounded-lg p-1 w-5 h-10\">\n                            <div className=\"bg-white rounded w-full h-full\">\n                              <div className=\"bg-gray-800 w-2 h-1 rounded-b mx-auto mb-1\"></div>\n                              <div className=\"px-1 space-y-1\">\n                                <div className=\"bg-blue-600 w-full h-0.5 rounded\"></div>\n                                <div className=\"bg-gray-300 w-3 h-0.5\"></div>\n                                <div className=\"bg-blue-600 w-2 h-1 rounded\"></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Floating Elements */}\n            <motion.div\n              className=\"absolute -top-6 -left-6 w-12 h-12 bg-primary/20 rounded-full\"\n              animate={{ \n                y: [0, -10, 0],\n                rotate: [0, 180, 360]\n              }}\n              transition={{ \n                duration: 4,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              }}\n            />\n            \n            <motion.div\n              className=\"absolute -bottom-4 -left-8 w-8 h-8 bg-success/20 rounded-full\"\n              animate={{ \n                y: [0, 10, 0],\n                x: [0, 5, 0]\n              }}\n              transition={{ \n                duration: 3,\n                repeat: Infinity,\n                ease: \"easeInOut\",\n                delay: 0.5\n              }}\n            />\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":14637},"client/src/contexts/ThemeContext.tsx":{"content":"import { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    // Check localStorage first, then system preference\n    const stored = localStorage.getItem('theme') as Theme | null;\n    if (stored) return stored;\n    \n    // Check system preference\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    \n    return 'light';\n  });\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  useEffect(() => {\n    // Update document class and localStorage\n    const root = document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}","size_bytes":1376},"client/src/hooks/use-analytics.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'wouter';\nimport { trackPageView } from '../lib/analytics';\n\nexport const useAnalytics = () => {\n  const [location] = useLocation();\n  const prevLocationRef = useRef<string>(location);\n  \n  useEffect(() => {\n    if (location !== prevLocationRef.current) {\n      trackPageView(location);\n      prevLocationRef.current = location;\n    }\n  }, [location]);\n};\n","size_bytes":427},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/analytics.ts":{"content":"// Define the gtag function globally\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}\n\n// Initialize Google Analytics\nexport const initGA = () => {\n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n\n  if (!measurementId) {\n    console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    return;\n  }\n\n  // Add Google Analytics script to the head\n  const script1 = document.createElement('script');\n  script1.async = true;\n  script1.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;\n  document.head.appendChild(script1);\n\n  // Initialize gtag\n  const script2 = document.createElement('script');\n  script2.textContent = `\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n    gtag('config', '${measurementId}');\n  `;\n  document.head.appendChild(script2);\n};\n\n// Track page views - useful for single-page applications\nexport const trackPageView = (url: string) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n  if (!measurementId) return;\n  \n  window.gtag('config', measurementId, {\n    page_path: url\n  });\n};\n\n// Track events\nexport const trackEvent = (\n  action: string, \n  category?: string, \n  label?: string, \n  value?: number\n) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  window.gtag('event', action, {\n    event_category: category,\n    event_label: label,\n    value: value,\n  });\n};\n","size_bytes":1582},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { motion } from 'framer-motion';\nimport { TrendingUp, Eye, Code } from 'lucide-react';\nimport { SEOHead } from '@/components/ui/seo-head';\nimport { SectionHeader } from '@/components/ui/section-header';\nimport { CTAButton } from '@/components/ui/cta-button';\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 30 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nexport default function About() {\n  const principles = [\n    {\n      icon: <TrendingUp className=\"text-primary text-2xl\" />,\n      title: \"Performance First\",\n      description: \"Every line of code is optimized for speed and Core Web Vitals compliance.\"\n    },\n    {\n      icon: <Eye className=\"text-primary text-2xl\" />,\n      title: \"Crystal Clear\", \n      description: \"Clean design and intuitive user experience that guides visitors to action.\"\n    },\n    {\n      icon: <Code className=\"text-primary text-2xl\" />,\n      title: \"Maintainable\",\n      description: \"Built with modern frameworks and best practices for long-term reliability.\"\n    }\n  ];\n\n  const techStack = [\n    \"React\", \"Next.js\", \"Tailwind CSS\", \"Node.js\", \n    \"Express\", \"MongoDB\", \"Vercel\", \"TypeScript\"\n  ];\n\n  return (\n    <>\n      <SEOHead \n        title=\"About WebRevamp Studio - Modern Website Redesign Experts\"\n        description=\"Learn about our mission to help Indian SMBs compete online with modern, fast, and conversion-focused websites. Founded by Nikhil Borude, MERN stack expert.\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-gray-50 to-blue-50 py-20 lg:py-32\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto text-center\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={fadeInUp}\n          >\n            <h1 className=\"text-4xl md:text-6xl font-sora font-bold text-dark mb-6 leading-tight\">\n              About{' '}\n              <span className=\"text-primary\">WebRevamp Studio</span>\n            </h1>\n            \n            <p className=\"text-xl text-gray-text mb-8 max-w-2xl mx-auto leading-relaxed\">\n              We're on a mission to help Indian SMBs compete online with modern, fast, and conversion-focused websites.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Mission & Story */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center mb-16\">\n              <motion.div\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n                variants={fadeInUp}\n              >\n                <h2 className=\"font-sora font-semibold text-3xl text-dark mb-6\">Our Mission</h2>\n                <p className=\"text-gray-text mb-6\">\n                  Too many great businesses are held back by outdated websites that don't represent their quality. We bridge that gap by creating modern web experiences that drive real business growth.\n                </p>\n                <p className=\"text-gray-text\">\n                  Founded by <strong>Nikhil Borude</strong>, a full-stack developer with expertise in the MERN stack, we combine technical excellence with business understanding to deliver websites that actually work for your business.\n                </p>\n              </motion.div>\n              \n              <motion.div \n                className=\"bg-gray-50 p-8 rounded-2xl\"\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n                variants={fadeInUp}\n              >\n                <img \n                  src=\"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300\"\n                  alt=\"Modern web development workspace\"\n                  className=\"w-full h-64 object-cover rounded-xl\"\n                />\n              </motion.div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Core Principles */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Our Core Principles\"\n            subtitle=\"The values that guide every project we undertake\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-3 gap-8 max-w-4xl mx-auto\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {principles.map((principle, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center bg-white p-8 rounded-2xl shadow-sm\"\n                variants={fadeInUp}\n              >\n                <div className=\"bg-primary/10 w-16 h-16 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                  {principle.icon}\n                </div>\n                <h3 className=\"font-sora font-semibold text-lg text-dark mb-2\">{principle.title}</h3>\n                <p className=\"text-gray-text text-sm\">{principle.description}</p>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Tech Stack */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto text-center\"\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n            variants={fadeInUp}\n          >\n            <SectionHeader \n              title=\"Technologies We Use\"\n              subtitle=\"Modern tools and frameworks that power performance and reliability\"\n            />\n            \n            <div className=\"flex flex-wrap justify-center gap-4\">\n              {techStack.map((tech, index) => (\n                <span \n                  key={index}\n                  className=\"bg-gray-100 text-dark px-4 py-2 rounded-lg font-medium transition-colors hover:bg-primary hover:text-white\"\n                >\n                  {tech}\n                </span>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Founder Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto\"\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n            variants={fadeInUp}\n          >\n            <div className=\"bg-white p-8 md:p-12 rounded-2xl shadow-sm\">\n              <div className=\"grid md:grid-cols-3 gap-8 items-center\">\n                <div className=\"text-center\">\n                  <div className=\"w-32 h-32 bg-gradient-to-br from-primary to-blue-600 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                    <span className=\"text-white text-4xl font-sora font-bold\">NB</span>\n                  </div>\n                  <h3 className=\"font-sora font-semibold text-xl text-dark mb-1\">Nikhil Borude</h3>\n                  <p className=\"text-gray-text\">Founder & Lead Developer</p>\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <h3 className=\"font-sora font-semibold text-2xl text-dark mb-4\">Meet the Founder</h3>\n                  <p className=\"text-gray-text mb-4\">\n                    With years of experience in full-stack development and a passion for helping small businesses succeed online, Nikhil founded WebRevamp Studio to bridge the gap between great businesses and great websites.\n                  </p>\n                  <p className=\"text-gray-text\">\n                    Specializing in the MERN stack and modern web technologies, he leads every project with a focus on performance, user experience, and business results.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Values */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Why Choose WebRevamp Studio?\"\n            subtitle=\"The qualities that set us apart from other web development agencies\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 gap-8 max-w-4xl mx-auto\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              {\n                title: \"Business-First Approach\",\n                description: \"We don't just build websites; we build growth engines. Every decision is made with your business goals in mind.\"\n              },\n              {\n                title: \"Transparent Communication\",\n                description: \"No tech jargon or hidden surprises. We keep you informed every step of the way with clear, honest communication.\"\n              },\n              {\n                title: \"Local Market Understanding\", \n                description: \"As experts in the Indian market, we understand the unique challenges and opportunities facing SMBs in India.\"\n              },\n              {\n                title: \"Long-term Partnership\",\n                description: \"We're not just vendors; we're partners in your growth. Our maintenance plans ensure your website continues to perform.\"\n              }\n            ].map((value, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-gray-50 p-6 rounded-xl\"\n                variants={fadeInUp}\n              >\n                <h3 className=\"font-sora font-semibold text-lg text-dark mb-3\">{value.title}</h3>\n                <p className=\"text-gray-text text-sm\">{value.description}</p>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary text-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-3xl mx-auto text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-sora font-bold mb-4\">\n              Ready to work with us?\n            </h2>\n            <p className=\"text-xl mb-8 opacity-90\">\n              Let's discuss how we can help transform your website and grow your business online.\n            </p>\n            <CTAButton\n              href=\"/contact\"\n              variant=\"secondary\"\n              size=\"lg\"\n              eventLabel=\"about_bottom_cta\"\n            >\n              Start Your Project\n            </CTAButton>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":11035},"client/src/pages/contact.tsx":{"content":"import { motion } from 'framer-motion';\nimport { MessageCircle, Mail, Phone, MapPin, Calendar, Clock } from 'lucide-react';\nimport { SEOHead } from '@/components/ui/seo-head';\nimport { SectionHeader } from '@/components/ui/section-header';\nimport { ContactForm } from '@/components/ui/contact-form';\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 30 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nexport default function Contact() {\n  const contactInfo = {\n    email: 'hello@webrevampstudio.com',\n    phone: '+91 98765 43210',\n    location: 'Mumbai, India',\n    whatsapp: '919876543210'\n  };\n\n  return (\n    <>\n      <SEOHead \n        title=\"Contact Us - Get Your Free Website Audit | WebRevamp Studio\"\n        description=\"Ready to transform your website? Contact WebRevamp Studio for a free audit and consultation. We'll send you a detailed Loom video audit within 24-48 hours.\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-gray-50 to-blue-50 py-20 lg:py-32\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto text-center\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={fadeInUp}\n          >\n            <h1 className=\"text-4xl md:text-6xl font-sora font-bold text-dark mb-6 leading-tight\">\n              Ready to transform{' '}\n              <span className=\"text-primary\">your website?</span>\n            </h1>\n            \n            <p className=\"text-xl text-gray-text mb-8 max-w-2xl mx-auto leading-relaxed\">\n              Get a free audit of your current website and discover how we can help you grow your business online.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Contact Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"grid lg:grid-cols-2 gap-12\">\n              {/* Contact Form */}\n              <motion.div\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n                variants={fadeInUp}\n              >\n                <ContactForm />\n              </motion.div>\n              \n              {/* Contact Information */}\n              <motion.div \n                className=\"space-y-8\"\n                variants={staggerContainer}\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n              >\n                {/* WhatsApp Contact */}\n                <motion.div \n                  className=\"bg-white p-8 rounded-2xl shadow-sm border border-gray-100\"\n                  variants={fadeInUp}\n                >\n                  <h3 className=\"font-sora font-semibold text-xl text-dark mb-4\">Prefer to chat?</h3>\n                  <p className=\"text-gray-text mb-6\">\n                    Get instant answers to your questions via WhatsApp. We're here to help!\n                  </p>\n                  <a \n                    href={`https://wa.me/${contactInfo.whatsapp}?text=Hi%2C%20I%27d%20like%20to%20discuss%20a%20website%20redesign%20project`}\n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"inline-flex items-center bg-success hover:bg-green-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors\"\n                  >\n                    <MessageCircle className=\"mr-2\" size={20} />\n                    Chat on WhatsApp\n                  </a>\n                </motion.div>\n                \n                {/* Direct Contact */}\n                <motion.div \n                  className=\"bg-white p-8 rounded-2xl shadow-sm border border-gray-100\"\n                  variants={fadeInUp}\n                >\n                  <h3 className=\"font-sora font-semibold text-xl text-dark mb-4\">Get in Touch</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center\">\n                      <Mail className=\"text-primary mr-3 flex-shrink-0\" size={20} />\n                      <a \n                        href={`mailto:${contactInfo.email}`}\n                        className=\"text-gray-text hover:text-primary transition-colors\"\n                      >\n                        {contactInfo.email}\n                      </a>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <Phone className=\"text-primary mr-3 flex-shrink-0\" size={20} />\n                      <a \n                        href={`tel:${contactInfo.phone}`}\n                        className=\"text-gray-text hover:text-primary transition-colors\"\n                      >\n                        {contactInfo.phone}\n                      </a>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <MapPin className=\"text-primary mr-3 flex-shrink-0\" size={20} />\n                      <span className=\"text-gray-text\">{contactInfo.location}</span>\n                    </div>\n                  </div>\n                </motion.div>\n                \n                {/* Calendar Booking */}\n                <motion.div \n                  className=\"bg-white p-8 rounded-2xl shadow-sm border border-gray-100\"\n                  variants={fadeInUp}\n                >\n                  <h3 className=\"font-sora font-semibold text-xl text-dark mb-4\">Book a Call</h3>\n                  <p className=\"text-gray-text mb-6\">\n                    Schedule a free 15-minute consultation to discuss your project.\n                  </p>\n                  <a \n                    href=\"#\"\n                    className=\"inline-flex items-center bg-primary hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors\"\n                  >\n                    <Calendar className=\"mr-2\" size={20} />\n                    Schedule Free Call\n                  </a>\n                </motion.div>\n              </motion.div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Frequently Asked Questions\"\n            subtitle=\"Quick answers to common questions about our services\"\n          />\n          \n          <motion.div \n            className=\"max-w-3xl mx-auto space-y-6\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              {\n                question: \"How long does a redesign take?\",\n                answer: \"Most redesign projects take 2-4 weeks for typical SMB sites, depending on complexity and requirements.\"\n              },\n              {\n                question: \"Can you migrate my content?\",\n                answer: \"Yes, we handle all content migration including pages, images, and setting up proper redirects to maintain SEO value.\"\n              },\n              {\n                question: \"Do you provide hosting?\",\n                answer: \"We deploy your site on modern platforms like Vercel or Netlify and help you set up your custom domain.\"\n              },\n              {\n                question: \"What's included in maintenance?\",\n                answer: \"Our maintenance plans include regular updates, security monitoring, backups, performance checks, and monthly reports.\"\n              },\n              {\n                question: \"Do you work with businesses outside Mumbai?\",\n                answer: \"Absolutely! We work with businesses across India and can handle everything remotely with regular video calls.\"\n              }\n            ].map((faq, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white p-6 rounded-xl shadow-sm\"\n                variants={fadeInUp}\n              >\n                <h3 className=\"font-sora font-semibold text-lg text-dark mb-2\">{faq.question}</h3>\n                <p className=\"text-gray-text\">{faq.answer}</p>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Response Time Promise */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto text-center bg-primary/5 p-8 rounded-2xl\"\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n            variants={fadeInUp}\n          >\n            <Clock className=\"text-primary mx-auto mb-4\" size={48} />\n            <h2 className=\"font-sora font-semibold text-2xl text-dark mb-4\">\n              Our Response Time Promise\n            </h2>\n            <p className=\"text-gray-text text-lg mb-6\">\n              We'll send you a detailed Loom video audit of your current website within 24-48 hours of receiving your inquiry.\n            </p>\n            <div className=\"grid md:grid-cols-3 gap-6 text-sm\">\n              <div>\n                <div className=\"font-semibold text-dark mb-1\">Form Submission</div>\n                <div className=\"text-gray-text\">Within 1 hour acknowledgment</div>\n              </div>\n              <div>\n                <div className=\"font-semibold text-dark mb-1\">Audit Delivery</div>\n                <div className=\"text-gray-text\">24-48 hours max</div>\n              </div>\n              <div>\n                <div className=\"font-semibold text-dark mb-1\">Follow-up Call</div>\n                <div className=\"text-gray-text\">Within 3 business days</div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":9983},"client/src/pages/home.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Star, CheckCircle, ArrowRight, Search, Rocket, Zap, Eye, Edit, Shield, Code, TrendingUp, Clock, Infinity } from 'lucide-react';\nimport { SEOHead } from '@/components/ui/seo-head';\nimport { SectionHeader } from '@/components/ui/section-header';\nimport { CTAButton } from '@/components/ui/cta-button';\nimport { BeforeAfterSlider } from '@/components/ui/before-after-slider';\nimport { Hero } from '@/components/Hero';\nimport testimonialsData from '@/data/testimonials.json';\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 30 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst slideInLeft = {\n  initial: { opacity: 0, x: -50 },\n  animate: { opacity: 1, x: 0 },\n  transition: { duration: 0.8, ease: \"easeOut\" }\n};\n\nconst slideInRight = {\n  initial: { opacity: 0, x: 50 },\n  animate: { opacity: 1, x: 0 },\n  transition: { duration: 0.8, ease: \"easeOut\" }\n};\n\nconst scaleIn = {\n  initial: { opacity: 0, scale: 0.8 },\n  animate: { opacity: 1, scale: 1 },\n  transition: { duration: 0.6, ease: \"easeOut\" }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.2\n    }\n  }\n};\n\nconst floatingAnimation = {\n  animate: {\n    y: [0, -10, 0],\n    transition: {\n      duration: 3,\n      repeat: Number.POSITIVE_INFINITY,\n      ease: \"easeInOut\"\n    }\n  }\n};\n\nconst pulseAnimation = {\n  animate: {\n    scale: [1, 1.05, 1],\n    transition: {\n      duration: 2,\n      repeat: Number.POSITIVE_INFINITY,\n      ease: \"easeInOut\"\n    }\n  }\n};\n\nexport default function Home() {\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"name\": \"WebRevamp Studio\",\n    \"description\": \"Modern website redesigns for growing businesses across India\",\n    \"url\": \"https://webrevampstudio.com\",\n    \"logo\": \"https://webrevampstudio.com/logo.png\",\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"telephone\": \"+91-98765-43210\",\n      \"contactType\": \"customer service\",\n      \"areaServed\": \"IN\",\n      \"availableLanguage\": \"en\"\n    }\n  };\n\n  return (\n    <>\n      <SEOHead \n        title=\"WebRevamp Studio - Modern Website Redesigns for Growing Businesses\"\n        description=\"We transform outdated websites into modern, fast, mobile-first experiences. Professional website redesign, development, and maintenance services for Indian SMBs.\"\n        structuredData={structuredData}\n      />\n\n      {/* Hero Section with Device Mockups */}\n      <Hero />\n\n      {/* Pain to Outcome Grid */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"From website problems to business growth\"\n            subtitle=\"We identify what's holding your website back and transform it into a powerful marketing tool\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              {\n                problem: { icon: <div className=\"text-red-500 text-3xl\">⚠️</div>, title: \"Slow Loading\", desc: \"5+ seconds load time driving visitors away\" },\n                solution: { icon: <Zap className=\"text-3xl text-success\" />, title: \"Lightning Fast\", desc: \"Sub-2 second loading with 90+ Lighthouse score\" }\n              },\n              {\n                problem: { icon: <div className=\"text-red-500 text-3xl\">📱</div>, title: \"Not Mobile Friendly\", desc: \"Poor mobile experience losing 60% of traffic\" },\n                solution: { icon: <CheckCircle className=\"text-3xl text-success\" />, title: \"100% Responsive\", desc: \"Perfect experience across all devices\" }\n              },\n              {\n                problem: { icon: <div className=\"text-red-500 text-3xl\">👁️</div>, title: \"Poor Design\", desc: \"Outdated design hurting brand credibility\" },\n                solution: { icon: <Eye className=\"text-3xl text-success\" />, title: \"Modern UI/UX\", desc: \"Clean, professional design that converts\" }\n              },\n              {\n                problem: { icon: <div className=\"text-red-500 text-3xl\">⚙️</div>, title: \"Hard to Update\", desc: \"Complex backend requiring developer for changes\" },\n                solution: { icon: <Edit className=\"text-3xl text-success\" />, title: \"Easy Management\", desc: \"Simple CMS for quick content updates\" }\n              }\n            ].map((item, index) => (\n              <motion.div \n                key={index}\n                className=\"text-center\"\n                variants={fadeInUp}\n                whileHover={{ y: -5 }}\n                transition={{ type: \"spring\", stiffness: 300 }}\n              >\n                <motion.div \n                  className=\"bg-red-50 p-6 rounded-2xl mb-4\"\n                  whileHover={{ scale: 1.03 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <motion.div\n                    animate={{ \n                      rotate: [0, -5, 5, 0],\n                      scale: [1, 1.1, 1] \n                    }}\n                    transition={{ \n                      duration: 2, \n                      repeat: Number.POSITIVE_INFINITY,\n                      repeatDelay: 3\n                    }}\n                  >\n                    {item.problem.icon}\n                  </motion.div>\n                  <h3 className=\"font-sora font-semibold text-lg text-dark mb-2 mt-4\">{item.problem.title}</h3>\n                  <p className=\"text-gray-text text-sm\">{item.problem.desc}</p>\n                </motion.div>\n                \n                <motion.div \n                  className=\"flex justify-center mb-4\"\n                  animate={{ \n                    y: [0, -3, 0],\n                    rotate: [90, 95, 85, 90]\n                  }}\n                  transition={{ \n                    duration: 2,\n                    repeat: Number.POSITIVE_INFINITY,\n                    ease: \"easeInOut\"\n                  }}\n                >\n                  <ArrowRight className=\"text-primary text-2xl rotate-90\" />\n                </motion.div>\n                \n                <motion.div \n                  className=\"bg-success/10 p-6 rounded-2xl\"\n                  whileHover={{ scale: 1.03 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <motion.div\n                    animate={{ \n                      scale: [1, 1.05, 1] \n                    }}\n                    transition={{ \n                      duration: 2, \n                      repeat: Number.POSITIVE_INFINITY,\n                      repeatDelay: 2,\n                      delay: index * 0.5\n                    }}\n                  >\n                    {item.solution.icon}\n                  </motion.div>\n                  <h3 className=\"font-sora font-semibold text-lg text-dark mb-2 mt-4\">{item.solution.title}</h3>\n                  <p className=\"text-gray-text text-sm\">{item.solution.desc}</p>\n                </motion.div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Snapshot */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Complete website transformation services\"\n            subtitle=\"From redesign to ongoing maintenance, we handle every aspect of your web presence\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              {\n                icon: <Eye className=\"text-primary text-xl\" />,\n                title: \"Website Redesign\",\n                desc: \"Complete UI/UX overhaul with modern design principles and conversion optimization.\",\n                features: [\"User experience audit\", \"Modern visual design\", \"Conversion optimization\"]\n              },\n              {\n                icon: <Code className=\"text-primary text-xl\" />,\n                title: \"Responsive Development\", \n                desc: \"Mobile-first development using React/Next.js with accessibility standards.\",\n                features: [\"React/Next.js development\", \"WCAG 2.1 accessibility\", \"Cross-browser compatibility\"]\n              },\n              {\n                icon: <TrendingUp className=\"text-primary text-xl\" />,\n                title: \"Performance & SEO\",\n                desc: \"Core Web Vitals optimization and technical SEO for better search rankings.\",\n                features: [\"Core Web Vitals optimization\", \"Technical SEO setup\", \"Schema.org markup\"]\n              }\n            ].map((service, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white p-8 rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300\"\n                variants={fadeInUp}\n                whileHover={{ \n                  y: -8,\n                  scale: 1.02,\n                  boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\"\n                }}\n                transition={{ type: \"spring\", stiffness: 300 }}\n              >\n                <motion.div \n                  className=\"bg-primary/10 w-12 h-12 rounded-lg flex items-center justify-center mb-6\"\n                  whileHover={{ \n                    scale: 1.1,\n                    rotate: 5,\n                    backgroundColor: \"rgba(59, 130, 246, 0.2)\"\n                  }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <motion.div\n                    animate={{ \n                      rotateY: [0, 360] \n                    }}\n                    transition={{ \n                      duration: 4, \n                      repeat: Number.POSITIVE_INFINITY,\n                      delay: index * 0.5\n                    }}\n                  >\n                    {service.icon}\n                  </motion.div>\n                </motion.div>\n                <motion.h3 \n                  className=\"font-sora font-semibold text-xl text-dark mb-4\"\n                  whileHover={{ color: \"#3B82F6\" }}\n                  transition={{ duration: 0.2 }}\n                >\n                  {service.title}\n                </motion.h3>\n                <p className=\"text-gray-text mb-6\">{service.desc}</p>\n                <motion.ul \n                  className=\"space-y-2 text-sm text-gray-text\"\n                  variants={staggerContainer}\n                  initial=\"initial\"\n                  whileInView=\"animate\"\n                  viewport={{ once: true }}\n                >\n                  {service.features.map((feature, idx) => (\n                    <motion.li \n                      key={idx} \n                      className=\"flex items-center\"\n                      variants={slideInLeft}\n                      whileHover={{ x: 5 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      <motion.div\n                        animate={{ scale: [1, 1.2, 1] }}\n                        transition={{ \n                          duration: 1.5,\n                          repeat: Number.POSITIVE_INFINITY,\n                          delay: idx * 0.2\n                        }}\n                      >\n                        <CheckCircle className=\"text-success mr-2\" size={16} />\n                      </motion.div>\n                      {feature}\n                    </motion.li>\n                  ))}\n                </motion.ul>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Featured Case Study */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"See the transformation in action\"\n            subtitle=\"Real projects showing the dramatic impact of our redesign process\"\n          />\n          \n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"bg-gray-100 rounded-2xl p-8\">\n              <div className=\"text-center mb-8\">\n                <h3 className=\"font-sora font-semibold text-2xl text-dark mb-2\">Krishna Dentals Redesign</h3>\n                <p className=\"text-gray-text\">Healthcare | Appointment booking integration</p>\n              </div>\n              \n              <BeforeAfterSlider\n                beforeImage=\"https://images.unsplash.com/photo-1586023492125-27b2c045efd7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n                afterImage=\"https://images.unsplash.com/photo-1629909613654-28e377c37b09?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n                beforeAlt=\"Before - Outdated dental clinic website\"\n                afterAlt=\"After - Modern dental clinic website\"\n              />\n              \n              {/* Results */}\n              <div className=\"grid md:grid-cols-3 gap-6 mt-8\">\n                <div className=\"text-center bg-success/10 p-6 rounded-xl\">\n                  <div className=\"text-2xl font-bold text-success mb-2\">+35%</div>\n                  <div className=\"text-sm text-gray-text\">Increase in online bookings</div>\n                </div>\n                <div className=\"text-center bg-primary/10 p-6 rounded-xl\">\n                  <div className=\"text-2xl font-bold text-primary mb-2\">&lt;2.2s</div>\n                  <div className=\"text-sm text-gray-text\">Average page load time</div>\n                </div>\n                <div className=\"text-center bg-warning/10 p-6 rounded-xl\">\n                  <div className=\"text-2xl font-bold text-warning mb-2\">95</div>\n                  <div className=\"text-sm text-gray-text\">Google Lighthouse score</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Our proven 4-step process\"\n            subtitle=\"From initial audit to ongoing maintenance, we handle every step with transparency and expertise\"\n          />\n          \n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"relative\">\n              {/* Process Timeline */}\n              <div className=\"absolute left-4 md:left-1/2 md:transform md:-translate-x-px top-8 bottom-8 w-0.5 bg-primary\"></div>\n              \n              {/* Process Steps */}\n              <div className=\"space-y-12\">\n                {[\n                  {\n                    number: 1,\n                    title: \"Audit & Strategy\",\n                    desc: \"We analyze your current site's performance, user experience, and business goals to create a comprehensive improvement strategy.\",\n                    duration: \"2-3 days\",\n                    icon: <Search />\n                  },\n                  {\n                    number: 2,\n                    title: \"UX/UI Redesign\", \n                    desc: \"Our designers create wireframes and mockups focused on user experience, conversion optimization, and modern aesthetics.\",\n                    duration: \"1 week\",\n                    icon: <Eye />\n                  },\n                  {\n                    number: 3,\n                    title: \"Build & Optimize\",\n                    desc: \"Development using modern frameworks with focus on performance, SEO, accessibility, and mobile responsiveness.\",\n                    duration: \"2-3 weeks\", \n                    icon: <Code />\n                  },\n                  {\n                    number: 4,\n                    title: \"Launch & Maintain\",\n                    desc: \"We handle the migration, provide training, and offer ongoing maintenance to ensure your site stays fast and secure.\",\n                    duration: \"Ongoing\",\n                    icon: <Rocket />\n                  }\n                ].map((step, index) => (\n                  <motion.div \n                    key={step.number}\n                    className=\"relative flex items-center\"\n                    initial={{ opacity: 0, x: index % 2 === 0 ? -30 : 30 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    viewport={{ once: true }}\n                    transition={{ delay: index * 0.2 }}\n                  >\n                    <div className=\"absolute left-0 md:left-1/2 md:transform md:-translate-x-1/2 w-8 h-8 bg-primary rounded-full flex items-center justify-center text-white font-bold text-sm\">\n                      {step.number}\n                    </div>\n                    <div className={`ml-16 md:ml-0 ${index % 2 === 0 ? 'md:w-1/2 md:pr-8' : 'md:w-1/2 md:pl-8 md:ml-auto'}`}>\n                      <h3 className=\"font-sora font-semibold text-xl text-dark mb-2\">{step.title}</h3>\n                      <p className=\"text-gray-text\">{step.desc}</p>\n                      <div className=\"mt-4 text-sm text-primary font-medium\">\n                        <Clock className=\"inline mr-1\" size={16} />\n                        {step.duration}\n                      </div>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Results Metrics */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Results that drive business growth\"\n            subtitle=\"Our data-driven approach delivers measurable improvements across all key metrics\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              { metric: \"30%\", title: \"Average Lead Increase\", desc: \"More inquiries from better UX\", color: \"success\" },\n              { metric: \"<2.5s\", title: \"Page Load Time\", desc: \"Optimized for Core Web Vitals\", color: \"primary\" },\n              { metric: \"100%\", title: \"Mobile Friendly\", desc: \"Perfect responsive experience\", color: \"warning\" },\n              { metric: \"90+\", title: \"Lighthouse Score\", desc: \"Performance & SEO optimized\", color: \"success\" }\n            ].map((item, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center bg-gray-50 p-8 rounded-2xl\"\n                variants={fadeInUp}\n              >\n                <div className={`text-4xl font-bold text-${item.color} mb-2`}>{item.metric}</div>\n                <div className=\"text-lg font-semibold text-dark mb-1\">{item.title}</div>\n                <div className=\"text-sm text-gray-text\">{item.desc}</div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Testimonials */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"What our clients say\"\n            subtitle=\"Real feedback from business owners who transformed their online presence\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {testimonialsData.testimonials.map((testimonial, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white p-8 rounded-2xl shadow-sm\"\n                variants={fadeInUp}\n              >\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"flex text-warning text-sm\">\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <Star key={i} className=\"fill-current\" size={16} />\n                    ))}\n                  </div>\n                </div>\n                <p className=\"text-gray-text mb-6 italic\">\"{testimonial.quote}\"</p>\n                <div className=\"flex items-center\">\n                  <img \n                    src={testimonial.avatar}\n                    alt={testimonial.author}\n                    className=\"w-12 h-12 rounded-full mr-4 object-cover\"\n                  />\n                  <div>\n                    <div className=\"font-semibold text-dark\">{testimonial.author}</div>\n                    <div className=\"text-sm text-gray-text\">{testimonial.company}</div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Final CTA */}\n      <section className=\"py-20 bg-primary text-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-3xl mx-auto text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-sora font-bold mb-4\">\n              Don't let an outdated website hold you back\n            </h2>\n            <p className=\"text-xl mb-8 opacity-90\">\n              Join 50+ businesses who've transformed their online presence with our proven process\n            </p>\n            <CTAButton\n              href=\"/contact\"\n              variant=\"secondary\"\n              size=\"lg\"\n              eventLabel=\"final_cta\"\n              icon={<Rocket size={20} />}\n            >\n              Start Your Transformation Today\n            </CTAButton>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":21761},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/privacy.tsx":{"content":"import { SEOHead } from '@/components/ui/seo-head';\nimport { Link } from 'wouter';\nimport { ArrowLeft } from 'lucide-react';\n\nexport default function Privacy() {\n  return (\n    <>\n      <SEOHead \n        title=\"Privacy Policy - WebRevamp Studio\"\n        description=\"Learn how WebRevamp Studio collects, uses, and protects your personal information when you use our website redesign services.\"\n      />\n\n      <div className=\"min-h-screen bg-gray-50 py-12\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <Link \n              href=\"/\" \n              className=\"inline-flex items-center text-primary hover:text-blue-700 mb-8 transition-colors\"\n            >\n              <ArrowLeft className=\"mr-2\" size={16} />\n              Back to Home\n            </Link>\n\n            <div className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n              <h1 className=\"text-3xl md:text-4xl font-sora font-bold text-dark mb-6\">\n                Privacy Policy\n              </h1>\n              \n              <div className=\"text-sm text-gray-text mb-8\">\n                Last updated: August 20, 2025\n              </div>\n\n              <div className=\"prose prose-lg max-w-none\">\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Introduction</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    WebRevamp Studio (\"we,\" \"our,\" or \"us\") is committed to protecting your privacy. This Privacy Policy explains how we collect, use, disclose, and safeguard your information when you visit our website or use our services.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Information We Collect</h2>\n                  \n                  <h3 className=\"text-xl font-sora font-medium text-dark mb-3\">Personal Information</h3>\n                  <p className=\"text-gray-text mb-4\">\n                    We may collect personal information that you provide directly to us, including:\n                  </p>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>Name and contact information (email, phone number)</li>\n                    <li>Company information</li>\n                    <li>Website URLs and project details</li>\n                    <li>Communication preferences</li>\n                  </ul>\n\n                  <h3 className=\"text-xl font-sora font-medium text-dark mb-3\">Automatically Collected Information</h3>\n                  <p className=\"text-gray-text mb-4\">\n                    When you visit our website, we may automatically collect certain information:\n                  </p>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>IP address and browser information</li>\n                    <li>Website usage data through Google Analytics</li>\n                    <li>Cookies and similar tracking technologies</li>\n                  </ul>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">How We Use Your Information</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    We use the information we collect to:\n                  </p>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>Provide and maintain our services</li>\n                    <li>Respond to your inquiries and requests</li>\n                    <li>Send you project updates and communications</li>\n                    <li>Improve our website and services</li>\n                    <li>Comply with legal obligations</li>\n                  </ul>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Information Sharing</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    We do not sell, trade, or otherwise transfer your personal information to third parties except:\n                  </p>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>With your explicit consent</li>\n                    <li>To trusted service providers who assist us in operating our website</li>\n                    <li>When required by law or to protect our rights</li>\n                  </ul>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Data Security</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    We implement appropriate security measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction. However, no method of transmission over the internet is 100% secure.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Cookies</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    Our website uses cookies to enhance your experience. You can choose to disable cookies through your browser settings, but this may affect the functionality of our website.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Your Rights</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    You have the right to:\n                  </p>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>Access and review your personal information</li>\n                    <li>Request correction of inaccurate data</li>\n                    <li>Request deletion of your personal information</li>\n                    <li>Opt out of marketing communications</li>\n                  </ul>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Contact Us</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    If you have questions about this Privacy Policy, please contact us:\n                  </p>\n                  <div className=\"text-gray-text\">\n                    <p>Email: hello@webrevampstudio.com</p>\n                    <p>Phone: +91 98765 43210</p>\n                    <p>Address: Mumbai, India</p>\n                  </div>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Changes to This Policy</h2>\n                  <p className=\"text-gray-text\">\n                    We may update this Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page and updating the \"Last updated\" date.\n                  </p>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","size_bytes":7264},"client/src/pages/services.tsx":{"content":"import { motion } from 'framer-motion';\nimport { CheckCircle, Eye, Code, TrendingUp, Shield, Plug, Star, ArrowRight } from 'lucide-react';\nimport { SEOHead } from '@/components/ui/seo-head';\nimport { SectionHeader } from '@/components/ui/section-header';\nimport { CTAButton } from '@/components/ui/cta-button';\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 30 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nexport default function Services() {\n  const services = [\n    {\n      icon: <Eye className=\"text-primary text-xl\" />,\n      title: \"Website Redesign\",\n      description: \"Complete UI/UX overhaul with modern design principles, improved information architecture, and conversion-focused copy.\",\n      features: [\n        \"User experience audit\",\n        \"Modern visual design\", \n        \"Conversion optimization\"\n      ]\n    },\n    {\n      icon: <Code className=\"text-primary text-xl\" />,\n      title: \"Responsive Development\",\n      description: \"Mobile-first development using React/Next.js with accessibility standards and clean, maintainable code.\",\n      features: [\n        \"React/Next.js development\",\n        \"WCAG 2.1 accessibility\",\n        \"Cross-browser compatibility\"\n      ]\n    },\n    {\n      icon: <TrendingUp className=\"text-primary text-xl\" />,\n      title: \"Performance & SEO\",\n      description: \"Core Web Vitals optimization, on-page SEO, and schema markup for better search rankings and user experience.\",\n      features: [\n        \"Core Web Vitals optimization\",\n        \"Technical SEO setup\",\n        \"Schema.org markup\"\n      ]\n    },\n    {\n      icon: <Shield className=\"text-primary text-xl\" />,\n      title: \"Ongoing Maintenance\",\n      description: \"Regular updates, security monitoring, performance checks, and monthly reports to keep your site running smoothly.\",\n      features: [\n        \"Security monitoring\",\n        \"Regular backups\",\n        \"Monthly performance reports\"\n      ]\n    },\n    {\n      icon: <Plug className=\"text-primary text-xl\" />,\n      title: \"System Integrations\",\n      description: \"Connect your website with WhatsApp, CRM systems, payment gateways, booking systems, and analytics tools.\",\n      features: [\n        \"WhatsApp integration\",\n        \"Payment gateway setup\",\n        \"Analytics & tracking\"\n      ]\n    }\n  ];\n\n  const maintenancePlans = [\n    {\n      name: \"Starter\",\n      price: \"₹2,999\",\n      description: \"Essential maintenance for small businesses\",\n      features: [\n        \"Regular updates & patches\",\n        \"Daily automated backups\",\n        \"Uptime monitoring\",\n        \"Basic security scanning\",\n        \"Email support\"\n      ],\n      popular: false\n    },\n    {\n      name: \"Growth\",\n      price: \"₹5,999\",\n      description: \"Everything in Starter plus content management\",\n      features: [\n        \"Everything in Starter\",\n        \"Monthly content updates\",\n        \"Advanced security scanning\",\n        \"Performance monitoring\",\n        \"Monthly reports\",\n        \"Priority support\"\n      ],\n      popular: true\n    },\n    {\n      name: \"Pro\",\n      price: \"₹9,999\",\n      description: \"Complete management for growing businesses\",\n      features: [\n        \"Everything in Growth\",\n        \"5 hours feature development\",\n        \"SEO optimization tweaks\",\n        \"A/B testing setup\",\n        \"Dedicated account manager\",\n        \"24/7 priority support\"\n      ],\n      popular: false\n    }\n  ];\n\n  return (\n    <>\n      <SEOHead \n        title=\"Website Redesign Services - WebRevamp Studio\"\n        description=\"Professional website redesign, responsive development, SEO optimization, and maintenance services for Indian SMBs. Transform your outdated website into a growth engine.\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-gray-50 to-blue-50 py-20 lg:py-32\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto text-center\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={fadeInUp}\n          >\n            <h1 className=\"text-4xl md:text-6xl font-sora font-bold text-dark mb-6 leading-tight\">\n              Complete website transformation{' '}\n              <span className=\"text-primary\">services</span>\n            </h1>\n            \n            <p className=\"text-xl text-gray-text mb-8 max-w-2xl mx-auto leading-relaxed\">\n              From redesign to ongoing maintenance, we handle every aspect of your web presence with expertise and transparency.\n            </p>\n            \n            <CTAButton\n              href=\"/contact\"\n              size=\"lg\"\n              eventLabel=\"services_hero_cta\"\n              icon={<ArrowRight size={20} />}\n            >\n              Get Started Today\n            </CTAButton>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Services Grid */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Our comprehensive service offerings\"\n            subtitle=\"Every service designed to maximize your website's impact on business growth\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {services.map((service, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white p-8 rounded-2xl shadow-sm hover:shadow-lg transition-shadow border border-gray-100\"\n                variants={fadeInUp}\n              >\n                <div className=\"bg-primary/10 w-12 h-12 rounded-lg flex items-center justify-center mb-6\">\n                  {service.icon}\n                </div>\n                <h3 className=\"font-sora font-semibold text-xl text-dark mb-4\">{service.title}</h3>\n                <p className=\"text-gray-text mb-6\">{service.description}</p>\n                <ul className=\"space-y-2 text-sm text-gray-text\">\n                  {service.features.map((feature, idx) => (\n                    <li key={idx} className=\"flex items-center\">\n                      <CheckCircle className=\"text-success mr-2 flex-shrink-0\" size={16} />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n              </motion.div>\n            ))}\n\n            {/* Complete Package Card */}\n            <motion.div\n              className=\"bg-gradient-to-br from-primary to-blue-600 p-8 rounded-2xl text-white\"\n              variants={fadeInUp}\n            >\n              <div className=\"bg-white/20 w-12 h-12 rounded-lg flex items-center justify-center mb-6\">\n                <Star className=\"text-white text-xl\" />\n              </div>\n              <h3 className=\"font-sora font-semibold text-xl mb-4\">Complete Package</h3>\n              <p className=\"mb-6 opacity-90\">Get everything above in one comprehensive package with priority support and dedicated project management.</p>\n              <CTAButton\n                href=\"/contact\"\n                variant=\"secondary\"\n                eventLabel=\"complete_package_cta\"\n                icon={<ArrowRight size={16} />}\n              >\n                Get Started\n              </CTAButton>\n            </motion.div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Maintenance Plans */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Maintenance plans that fit your needs\"\n            subtitle=\"Keep your website secure, fast, and up-to-date with our ongoing maintenance services\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-3 gap-8 max-w-5xl mx-auto\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {maintenancePlans.map((plan, index) => (\n              <motion.div\n                key={index}\n                className={`relative p-8 rounded-2xl ${\n                  plan.popular \n                    ? 'bg-primary text-white transform scale-105' \n                    : 'bg-white'\n                }`}\n                variants={fadeInUp}\n              >\n                {plan.popular && (\n                  <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 bg-success text-white px-4 py-1 rounded-full text-sm font-semibold\">\n                    Most Popular\n                  </div>\n                )}\n                \n                <div className=\"text-center mb-8\">\n                  <h3 className={`font-sora font-semibold text-xl mb-2 ${plan.popular ? 'text-white' : 'text-dark'}`}>\n                    {plan.name}\n                  </h3>\n                  <div className={`text-3xl font-bold mb-2 ${plan.popular ? 'text-white' : 'text-dark'}`}>\n                    {plan.price}\n                    <span className={`text-lg font-normal ${plan.popular ? 'opacity-80' : 'text-gray-text'}`}>\n                      /month\n                    </span>\n                  </div>\n                  <p className={`${plan.popular ? 'opacity-90' : 'text-gray-text'}`}>\n                    {plan.description}\n                  </p>\n                </div>\n                \n                <ul className=\"space-y-3 mb-8\">\n                  {plan.features.map((feature, idx) => (\n                    <li key={idx} className={`flex items-center ${plan.popular ? 'text-white' : 'text-gray-text'}`}>\n                      <CheckCircle className=\"text-success mr-3 flex-shrink-0\" size={16} />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n                \n                <CTAButton\n                  href=\"/contact\"\n                  variant={plan.popular ? \"secondary\" : \"outline\"}\n                  className=\"w-full\"\n                  eventLabel={`maintenance_${plan.name.toLowerCase()}_cta`}\n                >\n                  Get Started\n                </CTAButton>\n              </motion.div>\n            ))}\n          </motion.div>\n          \n          <div className=\"text-center mt-12\">\n            <p className=\"text-gray-text mb-4\">\n              Need a custom solution?{' '}\n              <CTAButton\n                href=\"/contact\"\n                variant=\"outline\"\n                size=\"sm\"\n                eventLabel=\"custom_solution_cta\"\n                className=\"inline-flex\"\n              >\n                Let's talk\n              </CTAButton>\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Process Overview */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"How we deliver results\"\n            subtitle=\"Our proven methodology ensures successful project delivery every time\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              {\n                step: \"01\",\n                title: \"Discovery & Audit\",\n                description: \"We analyze your current website and business goals to create a comprehensive strategy.\"\n              },\n              {\n                step: \"02\", \n                title: \"Design & Plan\",\n                description: \"Our team creates detailed wireframes and mockups for your approval before development begins.\"\n              },\n              {\n                step: \"03\",\n                title: \"Develop & Optimize\",\n                description: \"We build your website using modern technologies with focus on performance and SEO.\"\n              },\n              {\n                step: \"04\",\n                title: \"Launch & Support\",\n                description: \"We handle the launch process and provide ongoing support to ensure continued success.\"\n              }\n            ].map((item, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center\"\n                variants={fadeInUp}\n              >\n                <div className=\"bg-primary/10 w-16 h-16 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                  <span className=\"text-primary font-bold text-lg\">{item.step}</span>\n                </div>\n                <h3 className=\"font-sora font-semibold text-lg text-dark mb-2\">{item.title}</h3>\n                <p className=\"text-gray-text text-sm\">{item.description}</p>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary text-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-3xl mx-auto text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-sora font-bold mb-4\">\n              Ready to transform your website?\n            </h2>\n            <p className=\"text-xl mb-8 opacity-90\">\n              Get a free consultation and discover how our services can help grow your business.\n            </p>\n            <CTAButton\n              href=\"/contact\"\n              variant=\"secondary\"\n              size=\"lg\"\n              eventLabel=\"services_bottom_cta\"\n              icon={<ArrowRight size={20} />}\n            >\n              Start Your Project Today\n            </CTAButton>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":13853},"client/src/pages/terms.tsx":{"content":"import { SEOHead } from '@/components/ui/seo-head';\nimport { Link } from 'wouter';\nimport { ArrowLeft } from 'lucide-react';\n\nexport default function Terms() {\n  return (\n    <>\n      <SEOHead \n        title=\"Terms of Service - WebRevamp Studio\"\n        description=\"Read the terms and conditions for using WebRevamp Studio's website redesign and development services.\"\n      />\n\n      <div className=\"min-h-screen bg-gray-50 py-12\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <Link \n              href=\"/\" \n              className=\"inline-flex items-center text-primary hover:text-blue-700 mb-8 transition-colors\"\n            >\n              <ArrowLeft className=\"mr-2\" size={16} />\n              Back to Home\n            </Link>\n\n            <div className=\"bg-white rounded-2xl shadow-sm p-8 md:p-12\">\n              <h1 className=\"text-3xl md:text-4xl font-sora font-bold text-dark mb-6\">\n                Terms of Service\n              </h1>\n              \n              <div className=\"text-sm text-gray-text mb-8\">\n                Last updated: August 20, 2025\n              </div>\n\n              <div className=\"prose prose-lg max-w-none\">\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Agreement to Terms</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    By accessing and using WebRevamp Studio's services, you agree to be bound by these Terms of Service. If you do not agree to these terms, please do not use our services.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Services Description</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    WebRevamp Studio provides website redesign, development, performance optimization, SEO services, and ongoing maintenance for small and medium businesses.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Project Terms</h2>\n                  \n                  <h3 className=\"text-xl font-sora font-medium text-dark mb-3\">Project Scope</h3>\n                  <p className=\"text-gray-text mb-4\">\n                    All project work will be defined in a separate project agreement or statement of work that will include:\n                  </p>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>Detailed project scope and deliverables</li>\n                    <li>Timeline and milestones</li>\n                    <li>Payment terms and schedule</li>\n                    <li>Client responsibilities</li>\n                  </ul>\n\n                  <h3 className=\"text-xl font-sora font-medium text-dark mb-3\">Client Responsibilities</h3>\n                  <p className=\"text-gray-text mb-4\">Clients are responsible for:</p>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>Providing accurate and complete project information</li>\n                    <li>Timely provision of content, assets, and feedback</li>\n                    <li>Making payments according to agreed schedules</li>\n                    <li>Final approval of designs and functionality</li>\n                  </ul>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Payment Terms</h2>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>Project payments are typically structured as milestones</li>\n                    <li>Maintenance plans are billed monthly in advance</li>\n                    <li>Late payments may incur additional charges</li>\n                    <li>Refunds are subject to project agreement terms</li>\n                  </ul>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Intellectual Property</h2>\n                  \n                  <h3 className=\"text-xl font-sora font-medium text-dark mb-3\">Client Content</h3>\n                  <p className=\"text-gray-text mb-4\">\n                    Clients retain ownership of all content, text, images, and materials provided to us.\n                  </p>\n\n                  <h3 className=\"text-xl font-sora font-medium text-dark mb-3\">Developed Work</h3>\n                  <p className=\"text-gray-text mb-4\">\n                    Upon full payment, clients receive full ownership of custom code and designs created specifically for their project. We retain the right to use general techniques, methodologies, and non-client-specific code.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Warranties and Disclaimers</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    We warrant that our services will be performed with professional skill and care. However, we cannot guarantee specific business results or website performance metrics beyond our direct control.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Limitation of Liability</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    Our liability is limited to the amount paid for services. We are not liable for indirect, incidental, or consequential damages, including lost profits or business interruption.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Maintenance Services</h2>\n                  <ul className=\"list-disc pl-6 text-gray-text mb-6\">\n                    <li>Maintenance plans are subject to separate terms</li>\n                    <li>Services may be suspended for non-payment</li>\n                    <li>Emergency support is available during business hours</li>\n                    <li>Plans can be cancelled with 30 days notice</li>\n                  </ul>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Termination</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    Either party may terminate ongoing services with appropriate notice. Project-based work will be completed according to the project agreement or terminated with compensation for work completed.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Governing Law</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    These terms are governed by the laws of India. Any disputes will be resolved in the courts of Mumbai, India.\n                  </p>\n                </section>\n\n                <section className=\"mb-8\">\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Contact Information</h2>\n                  <p className=\"text-gray-text mb-4\">\n                    For questions about these Terms of Service:\n                  </p>\n                  <div className=\"text-gray-text\">\n                    <p>Email: hello@webrevampstudio.com</p>\n                    <p>Phone: +91 98765 43210</p>\n                    <p>Address: Mumbai, India</p>\n                  </div>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-sora font-semibold text-dark mb-4\">Changes to Terms</h2>\n                  <p className=\"text-gray-text\">\n                    We reserve the right to modify these terms at any time. Updated terms will be posted on our website with a revised date. Continued use of our services constitutes acceptance of modified terms.\n                  </p>\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","size_bytes":8408},"client/src/pages/work-detail.tsx":{"content":"import { useParams } from 'wouter';\nimport { motion } from 'framer-motion';\nimport { ArrowLeft, ExternalLink, Star } from 'lucide-react';\nimport { Link } from 'wouter';\nimport { SEOHead } from '@/components/ui/seo-head';\nimport { BeforeAfterSlider } from '@/components/ui/before-after-slider';\nimport { CTAButton } from '@/components/ui/cta-button';\nimport projectsData from '@/data/projects.json';\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 30 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nexport default function WorkDetail() {\n  const { slug } = useParams();\n  const project = projectsData.projects.find(p => p.slug === slug);\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-sora font-bold text-dark mb-4\">Project Not Found</h1>\n          <Link href=\"/work\" className=\"text-primary hover:underline\">\n            ← Back to Portfolio\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <SEOHead \n        title={`${project.title} Case Study - WebRevamp Studio`}\n        description={`${project.summary} See how we achieved ${project.impact.leads} increase in leads and ${project.impact.lcp} page load time.`}\n      />\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-gray-50 to-blue-50 py-20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={fadeInUp}\n          >\n            <Link \n              href=\"/work\" \n              className=\"inline-flex items-center text-primary hover:text-blue-700 mb-8 transition-colors\"\n            >\n              <ArrowLeft className=\"mr-2\" size={16} />\n              Back to Portfolio\n            </Link>\n            \n            <div className=\"text-center\">\n              <span className=\"inline-block bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium mb-4\">\n                {project.industry}\n              </span>\n              \n              <h1 className=\"text-4xl md:text-5xl font-sora font-bold text-dark mb-6\">\n                {project.title}\n              </h1>\n              \n              <p className=\"text-xl text-gray-text mb-8 max-w-2xl mx-auto\">\n                {project.summary}\n              </p>\n              \n              {/* Key Metrics */}\n              <div className=\"grid md:grid-cols-3 gap-6 mb-8\">\n                <div className=\"bg-white p-6 rounded-xl shadow-sm\">\n                  <div className=\"text-2xl font-bold text-success mb-1\">{project.impact.leads}</div>\n                  <div className=\"text-sm text-gray-text\">Lead Increase</div>\n                </div>\n                <div className=\"bg-white p-6 rounded-xl shadow-sm\">\n                  <div className=\"text-2xl font-bold text-primary mb-1\">{project.impact.lcp}</div>\n                  <div className=\"text-sm text-gray-text\">Page Load Time</div>\n                </div>\n                <div className=\"bg-white p-6 rounded-xl shadow-sm\">\n                  <div className=\"text-2xl font-bold text-warning mb-1\">{project.impact.lighthouse}</div>\n                  <div className=\"text-sm text-gray-text\">Lighthouse Score</div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Before/After Comparison */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto\"\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n            variants={fadeInUp}\n          >\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-3xl font-sora font-bold text-dark mb-4\">\n                The Transformation\n              </h2>\n              <p className=\"text-lg text-gray-text\">\n                See the dramatic difference our redesign made\n              </p>\n            </div>\n            \n            <BeforeAfterSlider\n              beforeImage={project.beforeImage}\n              afterImage={project.afterImage}\n              beforeAlt={`Before - ${project.title}`}\n              afterAlt={`After - ${project.title}`}\n            />\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Problem → Solution → Impact */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <motion.div\n                className=\"bg-white p-8 rounded-2xl shadow-sm\"\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n                variants={fadeInUp}\n              >\n                <div className=\"bg-red-100 w-12 h-12 rounded-lg flex items-center justify-center mb-6\">\n                  <span className=\"text-red-600 text-xl\">⚠️</span>\n                </div>\n                <h3 className=\"font-sora font-semibold text-xl text-dark mb-4\">The Problem</h3>\n                <p className=\"text-gray-text\">{project.problem}</p>\n              </motion.div>\n              \n              <motion.div\n                className=\"bg-white p-8 rounded-2xl shadow-sm\"\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n                variants={fadeInUp}\n                transition={{ delay: 0.1 }}\n              >\n                <div className=\"bg-blue-100 w-12 h-12 rounded-lg flex items-center justify-center mb-6\">\n                  <span className=\"text-primary text-xl\">💡</span>\n                </div>\n                <h3 className=\"font-sora font-semibold text-xl text-dark mb-4\">Our Solution</h3>\n                <p className=\"text-gray-text\">{project.solution}</p>\n              </motion.div>\n              \n              <motion.div\n                className=\"bg-white p-8 rounded-2xl shadow-sm\"\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n                variants={fadeInUp}\n                transition={{ delay: 0.2 }}\n              >\n                <div className=\"bg-green-100 w-12 h-12 rounded-lg flex items-center justify-center mb-6\">\n                  <span className=\"text-success text-xl\">📈</span>\n                </div>\n                <h3 className=\"font-sora font-semibold text-xl text-dark mb-4\">The Impact</h3>\n                <ul className=\"text-gray-text space-y-2\">\n                  <li>{project.impact.leads} increase in leads</li>\n                  <li>{project.impact.lcp} average load time</li>\n                  <li>{project.impact.lighthouse} Lighthouse score</li>\n                </ul>\n              </motion.div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Technology Stack */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto text-center\"\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n            variants={fadeInUp}\n          >\n            <h2 className=\"text-3xl font-sora font-bold text-dark mb-4\">\n              Technology Stack\n            </h2>\n            <p className=\"text-lg text-gray-text mb-8\">\n              Modern technologies that power performance and reliability\n            </p>\n            \n            <div className=\"flex flex-wrap justify-center gap-4\">\n              {project.stack.map((tech, index) => (\n                <span \n                  key={index}\n                  className=\"bg-gray-100 text-dark px-4 py-2 rounded-lg font-medium\"\n                >\n                  {tech}\n                </span>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Gallery */}\n      {project.gallery && project.gallery.length > 0 && (\n        <section className=\"py-20 bg-gray-50\">\n          <div className=\"container mx-auto px-4 lg:px-8\">\n            <motion.div \n              className=\"max-w-4xl mx-auto\"\n              initial=\"initial\"\n              whileInView=\"animate\"\n              viewport={{ once: true }}\n              variants={fadeInUp}\n            >\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-3xl font-sora font-bold text-dark mb-4\">\n                  Project Gallery\n                </h2>\n                <p className=\"text-lg text-gray-text\">\n                  Additional views of the final website\n                </p>\n              </div>\n              \n              <div className=\"grid md:grid-cols-2 gap-6\">\n                {project.gallery.map((image, index) => (\n                  <img\n                    key={index}\n                    src={image}\n                    alt={`${project.title} gallery image ${index + 1}`}\n                    className=\"w-full h-64 object-cover rounded-xl shadow-sm hover:shadow-lg transition-shadow\"\n                  />\n                ))}\n              </div>\n            </motion.div>\n          </div>\n        </section>\n      )}\n\n      {/* Client Testimonial */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-3xl mx-auto text-center\"\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n            variants={fadeInUp}\n          >\n            <div className=\"bg-gray-50 p-8 rounded-2xl\">\n              <div className=\"flex justify-center mb-4\">\n                <div className=\"flex text-warning\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"fill-current\" size={20} />\n                  ))}\n                </div>\n              </div>\n              \n              <blockquote className=\"text-xl text-gray-text mb-6 italic\">\n                \"{project.testimonial.quote}\"\n              </blockquote>\n              \n              <div className=\"text-center\">\n                <div className=\"font-semibold text-dark text-lg\">{project.testimonial.author}</div>\n                <div className=\"text-gray-text\">{project.testimonial.company}</div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary text-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-3xl mx-auto text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-sora font-bold mb-4\">\n              Ready for your own transformation?\n            </h2>\n            <p className=\"text-xl mb-8 opacity-90\">\n              Let's discuss how we can achieve similar results for your business.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <CTAButton\n                href=\"/contact\"\n                variant=\"secondary\"\n                size=\"lg\"\n                eventLabel=\"case_study_cta\"\n              >\n                Start Your Project\n              </CTAButton>\n              <CTAButton\n                href=\"/work\"\n                variant=\"outline\"\n                size=\"lg\"\n                eventLabel=\"view_more_work\"\n              >\n                View More Work\n              </CTAButton>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":11729},"client/src/pages/work.tsx":{"content":"import { motion } from 'framer-motion';\nimport { ArrowRight, ExternalLink } from 'lucide-react';\nimport { Link } from 'wouter';\nimport { SEOHead } from '@/components/ui/seo-head';\nimport { SectionHeader } from '@/components/ui/section-header';\nimport { CTAButton } from '@/components/ui/cta-button';\nimport projectsData from '@/data/projects.json';\n\nconst fadeInUp = {\n  initial: { opacity: 0, y: 30 },\n  animate: { opacity: 1, y: 0 },\n  transition: { duration: 0.6 }\n};\n\nconst staggerContainer = {\n  animate: {\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nexport default function Work() {\n  const getIndustryColor = (industry: string) => {\n    const colors = {\n      'Healthcare': 'bg-blue-100 text-primary',\n      'E-commerce': 'bg-green-100 text-success', \n      'Manufacturing': 'bg-yellow-100 text-warning'\n    };\n    return colors[industry as keyof typeof colors] || 'bg-gray-100 text-gray-text';\n  };\n\n  return (\n    <>\n      <SEOHead \n        title=\"Our Portfolio - Website Redesign Case Studies | WebRevamp Studio\"\n        description=\"See real transformations from our website redesign projects. Case studies showing dramatic improvements in performance, user experience, and business results.\"\n      />\n\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-gray-50 to-blue-50 py-20 lg:py-32\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <motion.div \n            className=\"max-w-4xl mx-auto text-center\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={fadeInUp}\n          >\n            <h1 className=\"text-4xl md:text-6xl font-sora font-bold text-dark mb-6 leading-tight\">\n              Our portfolio of{' '}\n              <span className=\"text-primary\">transformations</span>\n            </h1>\n            \n            <p className=\"text-xl text-gray-text mb-8 max-w-2xl mx-auto leading-relaxed\">\n              See how we've helped businesses across industries modernize their web presence and achieve measurable growth.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Portfolio Grid */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Real projects, real results\"\n            subtitle=\"Each case study represents a successful partnership and transformation\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {projectsData.projects.map((project, index) => (\n              <motion.div\n                key={project.slug}\n                className=\"bg-white rounded-2xl overflow-hidden shadow-sm hover:shadow-lg transition-all duration-300 border border-gray-100\"\n                variants={fadeInUp}\n                whileHover={{ \n                  y: -8,\n                  scale: 1.02,\n                  boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\",\n                  borderColor: \"rgba(59, 130, 246, 0.3)\"\n                }}\n                initial={{ opacity: 0, y: 50 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n              >\n                <motion.div \n                  className=\"relative overflow-hidden\"\n                  whileHover={{ scale: 1.03 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <motion.img \n                    src={project.afterImage}\n                    alt={`${project.title} website redesign`}\n                    className=\"w-full h-48 object-cover\"\n                    whileHover={{ scale: 1.1 }}\n                    transition={{ duration: 0.5 }}\n                  />\n                  <motion.div \n                    className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0\"\n                    whileHover={{ opacity: 1 }}\n                    transition={{ duration: 0.3 }}\n                  />\n                  <motion.div \n                    className=\"absolute top-4 right-4\"\n                    initial={{ scale: 0 }}\n                    animate={{ scale: 1 }}\n                    transition={{ delay: index * 0.1 + 0.5, type: \"spring\" }}\n                  >\n                    <motion.span \n                      className={`text-xs px-2 py-1 rounded ${getIndustryColor(project.industry)}`}\n                      whileHover={{ scale: 1.1 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      {project.industry}\n                    </motion.span>\n                  </motion.div>\n                </motion.div>\n                \n                <div className=\"p-6\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-sora font-semibold text-lg text-dark\">{project.title}</h3>\n                  </div>\n                  \n                  <p className=\"text-gray-text text-sm mb-4 line-clamp-2\">{project.summary}</p>\n                  \n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"text-sm\">\n                      <span className=\"text-success font-semibold\">{project.impact.leads}</span>\n                      <span className=\"text-gray-text mx-2\">•</span>\n                      <span className=\"text-primary font-semibold\">{project.impact.lcp}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex flex-wrap gap-2 mb-4\">\n                    {project.stack.slice(0, 3).map((tech, idx) => (\n                      <span \n                        key={idx}\n                        className=\"text-xs bg-gray-100 text-gray-text px-2 py-1 rounded\"\n                      >\n                        {tech}\n                      </span>\n                    ))}\n                    {project.stack.length > 3 && (\n                      <span className=\"text-xs text-gray-400\">+{project.stack.length - 3} more</span>\n                    )}\n                  </div>\n                  \n                  <Link \n                    href={`/work/${project.slug}`}\n                    className=\"text-primary font-semibold text-sm hover:underline flex items-center group\"\n                  >\n                    View Case Study \n                    <ArrowRight className=\"ml-1 group-hover:translate-x-1 transition-transform\" size={16} />\n                  </Link>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Results across all projects\"\n            subtitle=\"Consistent improvements that drive real business growth\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              { metric: \"50+\", title: \"Projects Completed\", desc: \"Successful transformations delivered\" },\n              { metric: \"35%\", title: \"Average Lead Increase\", desc: \"Across all client websites\" },\n              { metric: \"<2.5s\", title: \"Average Load Time\", desc: \"Consistently fast performance\" },\n              { metric: \"92\", title: \"Average Lighthouse Score\", desc: \"Optimized for all metrics\" }\n            ].map((stat, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center bg-white p-8 rounded-2xl shadow-sm\"\n                variants={fadeInUp}\n              >\n                <div className=\"text-4xl font-bold text-primary mb-2\">{stat.metric}</div>\n                <div className=\"text-lg font-semibold text-dark mb-1\">{stat.title}</div>\n                <div className=\"text-sm text-gray-text\">{stat.desc}</div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Process Preview */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <SectionHeader \n            title=\"Our proven process\"\n            subtitle=\"How we consistently deliver successful transformations\"\n          />\n          \n          <motion.div \n            className=\"grid md:grid-cols-3 gap-8 max-w-4xl mx-auto\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {[\n              {\n                title: \"Analyze & Plan\",\n                description: \"We audit your current site and create a comprehensive strategy for improvement.\",\n                color: \"bg-blue-100 text-primary\"\n              },\n              {\n                title: \"Design & Build\", \n                description: \"Our team designs and develops your new website with modern best practices.\",\n                color: \"bg-green-100 text-success\"\n              },\n              {\n                title: \"Launch & Optimize\",\n                description: \"We handle the launch and provide ongoing optimization for continued growth.\",\n                color: \"bg-yellow-100 text-warning\"\n              }\n            ].map((step, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center\"\n                variants={fadeInUp}\n              >\n                <div className={`w-16 h-16 rounded-2xl flex items-center justify-center mx-auto mb-4 ${step.color}`}>\n                  <span className=\"text-2xl font-bold\">{index + 1}</span>\n                </div>\n                <h3 className=\"font-sora font-semibold text-lg text-dark mb-2\">{step.title}</h3>\n                <p className=\"text-gray-text text-sm\">{step.description}</p>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary text-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-3xl mx-auto text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-sora font-bold mb-4\">\n              Ready to join our success stories?\n            </h2>\n            <p className=\"text-xl mb-8 opacity-90\">\n              Let's discuss how we can transform your website and drive real business growth.\n            </p>\n            <CTAButton\n              href=\"/contact\"\n              variant=\"secondary\"\n              size=\"lg\"\n              eventLabel=\"work_bottom_cta\"\n              icon={<ArrowRight size={20} />}\n            >\n              Start Your Transformation\n            </CTAButton>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":11128},"client/src/components/layout/footer.tsx":{"content":"import { Link } from 'wouter';\nimport { \n  Linkedin, \n  Twitter, \n  Instagram, \n  Mail, \n  Phone, \n  MapPin, \n  MessageCircle \n} from 'lucide-react';\n\nexport function Footer() {\n  const currentYear = new Date().getFullYear();\n\n  const services = [\n    { name: 'Website Redesign', href: '/services#redesign' },\n    { name: 'Responsive Development', href: '/services#development' },\n    { name: 'Performance & SEO', href: '/services#seo' },\n    { name: 'Maintenance Plans', href: '/services#maintenance' },\n    { name: 'System Integrations', href: '/services#integrations' },\n  ];\n\n  const company = [\n    { name: 'About Us', href: '/about' },\n    { name: 'Our Work', href: '/work' },\n    { name: 'Contact', href: '/contact' },\n    { name: 'Privacy Policy', href: '/privacy' },\n    { name: 'Terms of Service', href: '/terms' },\n  ];\n\n  const contactInfo = {\n    email: 'hello@webrevampstudio.com',\n    phone: '+91 98765 43210',\n    location: 'Mumbai, India',\n    whatsapp: '919876543210'\n  };\n\n  return (\n    <footer className=\"bg-dark text-white py-16\">\n      <div className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n          {/* Company Info */}\n          <div>\n            <div className=\"font-sora font-bold text-xl mb-4\">\n              WebRevamp<span className=\"text-primary\">Studio</span>\n            </div>\n            <p className=\"text-gray-400 mb-4\">\n              Modern website redesigns for growing businesses across India.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"https://linkedin.com/company/webrevampstudio\" \n                className=\"text-gray-400 hover:text-white transition-colors\"\n                aria-label=\"LinkedIn\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Linkedin size={20} />\n              </a>\n              <a \n                href=\"https://twitter.com/webrevampstudio\" \n                className=\"text-gray-400 hover:text-white transition-colors\"\n                aria-label=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter size={20} />\n              </a>\n              <a \n                href=\"https://instagram.com/webrevampstudio\" \n                className=\"text-gray-400 hover:text-white transition-colors\"\n                aria-label=\"Instagram\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Instagram size={20} />\n              </a>\n            </div>\n          </div>\n          \n          {/* Services */}\n          <div>\n            <h3 className=\"font-sora font-semibold text-lg mb-4\">Services</h3>\n            <ul className=\"space-y-2 text-gray-400\">\n              {services.map((service) => (\n                <li key={service.name}>\n                  <Link \n                    href={service.href} \n                    className=\"hover:text-white transition-colors\"\n                  >\n                    {service.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          {/* Company */}\n          <div>\n            <h3 className=\"font-sora font-semibold text-lg mb-4\">Company</h3>\n            <ul className=\"space-y-2 text-gray-400\">\n              {company.map((item) => (\n                <li key={item.name}>\n                  <Link \n                    href={item.href} \n                    className=\"hover:text-white transition-colors\"\n                  >\n                    {item.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          {/* Contact */}\n          <div>\n            <h3 className=\"font-sora font-semibold text-lg mb-4\">Get in Touch</h3>\n            <ul className=\"space-y-2 text-gray-400\">\n              <li className=\"flex items-center\">\n                <Mail className=\"mr-2\" size={16} />\n                <a \n                  href={`mailto:${contactInfo.email}`}\n                  className=\"hover:text-white transition-colors\"\n                >\n                  {contactInfo.email}\n                </a>\n              </li>\n              <li className=\"flex items-center\">\n                <Phone className=\"mr-2\" size={16} />\n                <a \n                  href={`tel:${contactInfo.phone}`}\n                  className=\"hover:text-white transition-colors\"\n                >\n                  {contactInfo.phone}\n                </a>\n              </li>\n              <li className=\"flex items-center\">\n                <MapPin className=\"mr-2\" size={16} />\n                <span>{contactInfo.location}</span>\n              </li>\n            </ul>\n            <a \n              href={`https://wa.me/${contactInfo.whatsapp}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center bg-success hover:bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors mt-4\"\n            >\n              <MessageCircle className=\"mr-2\" size={16} />\n              WhatsApp\n            </a>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-700 pt-8 text-center text-gray-400\">\n          <p>&copy; {currentYear} WebRevamp Studio. All rights reserved.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5455},"client/src/components/layout/header.tsx":{"content":"import { useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { Menu, X } from 'lucide-react';\nimport { CTAButton } from '@/components/ui/cta-button';\nimport { trackEvent } from '@/lib/analytics';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nexport function Header() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navigation = [\n    { name: 'Home', href: '/' },\n    { name: 'Services', href: '/services' },\n    { name: 'Work', href: '/work' },\n    { name: 'About', href: '/about' },\n    { name: 'Contact', href: '/contact' },\n  ];\n\n  const handleMobileMenuToggle = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n    trackEvent('mobile_menu_toggle', 'navigation', isMobileMenuOpen ? 'close' : 'open');\n  };\n\n  const handleSkipToContent = () => {\n    const mainContent = document.getElementById('main-content');\n    if (mainContent) {\n      mainContent.focus();\n      mainContent.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <>\n      {/* Skip Link for Accessibility */}\n      <button\n        onClick={handleSkipToContent}\n        className=\"sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary text-white px-4 py-2 rounded-lg z-50\"\n      >\n        Skip to main content\n      </button>\n\n      <motion.header \n        className=\"bg-white shadow-sm border-b sticky top-0 z-40\"\n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        transition={{ duration: 0.5, ease: \"easeOut\" }}\n      >\n        <nav className=\"container mx-auto px-4 lg:px-8\" aria-label=\"Main navigation\">\n          <div className=\"flex items-center justify-between h-16\">\n            {/* Logo */}\n            <motion.div \n              className=\"flex-shrink-0\"\n              whileHover={{ scale: 1.05 }}\n              transition={{ duration: 0.2 }}\n            >\n              <Link href=\"/\" className=\"font-sora font-bold text-xl text-dark\">\n                <motion.span\n                  animate={{ \n                    backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n                  }}\n                  transition={{ duration: 4, repeat: Number.POSITIVE_INFINITY }}\n                  style={{\n                    background: \"linear-gradient(90deg, #1F2937, #3B82F6, #1F2937)\",\n                    backgroundSize: \"200% 100%\",\n                    WebkitBackgroundClip: \"text\",\n                    WebkitTextFillColor: \"transparent\",\n                  }}\n                >\n                  WebRevamp\n                </motion.span>\n                <span className=\"text-primary\">Studio</span>\n              </Link>\n            </motion.div>\n            \n            {/* Desktop Navigation */}\n            <div className=\"hidden md:block\">\n              <motion.div \n                className=\"ml-10 flex items-baseline space-x-8\"\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5, delay: 0.2 }}\n              >\n                {navigation.map((item, index) => (\n                  <motion.div\n                    key={item.name}\n                    initial={{ opacity: 0, y: -10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3, delay: 0.3 + index * 0.1 }}\n                    whileHover={{ y: -2 }}\n                  >\n                    <Link\n                      href={item.href}\n                      className={`px-3 py-2 text-sm font-medium transition-colors relative ${\n                        location === item.href\n                          ? 'text-primary'\n                          : 'text-gray-text hover:text-primary'\n                      }`}\n                    >\n                      {item.name}\n                      {location === item.href && (\n                        <motion.div\n                          className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-primary\"\n                          layoutId=\"activeTab\"\n                          initial={{ opacity: 0 }}\n                          animate={{ opacity: 1 }}\n                          transition={{ duration: 0.3 }}\n                        />\n                      )}\n                    </Link>\n                  </motion.div>\n                ))}\n              </motion.div>\n            </div>\n            \n            {/* CTA Button */}\n            <motion.div \n              className=\"hidden md:block\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5, delay: 0.8 }}\n            >\n              <motion.div\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <CTAButton\n                  href=\"/contact\"\n                  size=\"sm\"\n                  eventLabel=\"header_cta\"\n                >\n                  Get Free Audit\n                </CTAButton>\n              </motion.div>\n            </motion.div>\n            \n            {/* Mobile menu button */}\n            <motion.div \n              className=\"md:hidden\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.3, delay: 0.5 }}\n            >\n              <motion.button\n                type=\"button\"\n                onClick={handleMobileMenuToggle}\n                className=\"text-gray-text hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary p-2 rounded-lg\"\n                aria-expanded={isMobileMenuOpen}\n                aria-label=\"Toggle mobile menu\"\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                animate={{ rotate: isMobileMenuOpen ? 180 : 0 }}\n                transition={{ duration: 0.3 }}\n              >\n                <AnimatePresence mode=\"wait\">\n                  {isMobileMenuOpen ? (\n                    <motion.div\n                      key=\"close\"\n                      initial={{ rotate: -90, opacity: 0 }}\n                      animate={{ rotate: 0, opacity: 1 }}\n                      exit={{ rotate: 90, opacity: 0 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      <X size={20} />\n                    </motion.div>\n                  ) : (\n                    <motion.div\n                      key=\"menu\"\n                      initial={{ rotate: 90, opacity: 0 }}\n                      animate={{ rotate: 0, opacity: 1 }}\n                      exit={{ rotate: -90, opacity: 0 }}\n                      transition={{ duration: 0.2 }}\n                    >\n                      <Menu size={20} />\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </motion.button>\n            </motion.div>\n          </div>\n          \n          {/* Mobile Navigation */}\n          <AnimatePresence>\n            {isMobileMenuOpen && (\n              <motion.div \n                className=\"md:hidden\"\n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: \"auto\" }}\n                exit={{ opacity: 0, height: 0 }}\n                transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              >\n                <motion.div \n                  className=\"px-2 pt-2 pb-3 space-y-1 bg-white border-t\"\n                  initial={{ y: -20 }}\n                  animate={{ y: 0 }}\n                  transition={{ duration: 0.3, delay: 0.1 }}\n                >\n                  {navigation.map((item, index) => (\n                    <motion.div\n                      key={item.name}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.3, delay: 0.2 + index * 0.1 }}\n                      whileHover={{ x: 5 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <Link\n                        href={item.href}\n                        className={`block px-3 py-2 text-base font-medium rounded-lg transition-colors ${\n                          location === item.href\n                            ? 'text-primary bg-primary/10'\n                            : 'text-gray-text hover:text-primary hover:bg-gray-50'\n                        }`}\n                        onClick={() => setIsMobileMenuOpen(false)}\n                      >\n                        {item.name}\n                      </Link>\n                    </motion.div>\n                  ))}\n                  <motion.div \n                    className=\"pt-4\"\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.3, delay: 0.7 }}\n                  >\n                    <motion.div\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                    >\n                      <CTAButton\n                        href=\"/contact\"\n                        className=\"w-full\"\n                        eventLabel=\"mobile_header_cta\"\n                        onClick={() => setIsMobileMenuOpen(false)}\n                      >\n                        Get Free Audit\n                      </CTAButton>\n                    </motion.div>\n                  </motion.div>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </nav>\n      </motion.header>\n    </>\n  );\n}\n","size_bytes":9549},"client/src/components/layout/layout.tsx":{"content":"import { Header } from './header';\nimport { Footer } from './footer';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <main id=\"main-content\" className=\"flex-1\" tabIndex={-1}>\n        {children}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":388},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/before-after-slider.tsx":{"content":"import React, { useState, useRef, useCallback } from 'react';\nimport { ArrowLeftRight } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface BeforeAfterSliderProps {\n  beforeImage: string;\n  afterImage: string;\n  beforeAlt: string;\n  afterAlt: string;\n  className?: string;\n}\n\nexport function BeforeAfterSlider({\n  beforeImage,\n  afterImage,\n  beforeAlt,\n  afterAlt,\n  className = \"\"\n}: BeforeAfterSliderProps) {\n  const [sliderPosition, setSliderPosition] = useState(50);\n  const [isDragging, setIsDragging] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const updateSliderPosition = useCallback((clientX: number) => {\n    if (!containerRef.current) return;\n    \n    const rect = containerRef.current.getBoundingClientRect();\n    const x = clientX - rect.left;\n    const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));\n    setSliderPosition(percentage);\n  }, []);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\n    setIsDragging(true);\n    updateSliderPosition(e.clientX);\n    e.preventDefault();\n  }, [updateSliderPosition]);\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (isDragging) {\n      updateSliderPosition(e.clientX);\n    }\n  }, [isDragging, updateSliderPosition]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    setIsDragging(true);\n    updateSliderPosition(e.touches[0].clientX);\n    e.preventDefault();\n  }, [updateSliderPosition]);\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    if (isDragging) {\n      updateSliderPosition(e.touches[0].clientX);\n    }\n  }, [isDragging, updateSliderPosition]);\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  // Add global event listeners\n  React.useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      document.addEventListener('touchmove', handleTouchMove);\n      document.addEventListener('touchend', handleTouchEnd);\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('touchmove', handleTouchMove);\n      document.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [isDragging, handleMouseMove, handleMouseUp, handleTouchMove, handleTouchEnd]);\n\n  return (\n    <motion.div \n      ref={containerRef}\n      className={`before-after-container bg-white rounded-xl overflow-hidden shadow-lg ${className}`}\n      style={{ height: '400px' }}\n      initial={{ opacity: 0, scale: 0.9 }}\n      whileInView={{ opacity: 1, scale: 1 }}\n      viewport={{ once: true }}\n      transition={{ duration: 0.5 }}\n      whileHover={{ scale: 1.02 }}\n    >\n      {/* Before Image */}\n      <motion.img \n        src={beforeImage}\n        alt={beforeAlt}\n        className=\"w-full h-full object-cover\"\n        draggable={false}\n        initial={{ filter: \"blur(3px)\" }}\n        animate={{ filter: \"blur(0px)\" }}\n        transition={{ duration: 0.8 }}\n      />\n      \n      {/* After Image */}\n      <motion.div \n        className=\"after-image\"\n        style={{\n          clipPath: `polygon(${sliderPosition}% 0%, 100% 0%, 100% 100%, ${sliderPosition}% 100%)`\n        }}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.6, delay: 0.2 }}\n      >\n        <motion.img \n          src={afterImage}\n          alt={afterAlt}\n          className=\"w-full h-full object-cover\"\n          draggable={false}\n          initial={{ filter: \"blur(3px)\" }}\n          animate={{ filter: \"blur(0px)\" }}\n          transition={{ duration: 0.8, delay: 0.3 }}\n        />\n      </motion.div>\n      \n      {/* Slider */}\n      <motion.div \n        className=\"before-after-slider\"\n        style={{ left: `${sliderPosition}%` }}\n        onMouseDown={handleMouseDown}\n        onTouchStart={handleTouchStart}\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        animate={isDragging ? { scale: 1.15 } : { scale: 1 }}\n        transition={{ type: \"spring\", stiffness: 300 }}\n      >\n        <motion.div \n          className=\"slider-button\"\n          animate={{ \n            boxShadow: [\n              \"0 0 0 0 rgba(59, 130, 246, 0.7)\",\n              \"0 0 0 10px rgba(59, 130, 246, 0)\",\n              \"0 0 0 0 rgba(59, 130, 246, 0)\"\n            ]\n          }}\n          transition={{ \n            duration: 2, \n            repeat: Number.POSITIVE_INFINITY,\n            ease: \"easeInOut\"\n          }}\n        >\n          <motion.div\n            animate={{ rotate: isDragging ? 90 : 0 }}\n            transition={{ duration: 0.2 }}\n          >\n            <ArrowLeftRight size={16} />\n          </motion.div>\n        </motion.div>\n      </motion.div>\n    </motion.div>\n  );\n}\n","size_bytes":4964},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/contact-form.tsx":{"content":"import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { trackEvent } from '@/lib/analytics';\nimport { Send } from 'lucide-react';\n\nconst contactSchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n  email: z.string().email('Please enter a valid email address'),\n  company: z.string().optional(),\n  currentWebsite: z.string().url('Please enter a valid URL').optional().or(z.literal('')),\n  message: z.string().min(20, 'Message must be at least 20 characters'),\n  website: z.string().optional(), // honeypot field\n});\n\ntype ContactFormData = z.infer<typeof contactSchema>;\n\nexport function ContactForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n  \n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactSchema),\n    defaultValues: {\n      name: '',\n      email: '',\n      company: '',\n      currentWebsite: '',\n      message: '',\n      website: '', // honeypot\n    },\n  });\n\n  const onSubmit = async (data: ContactFormData) => {\n    // Check honeypot\n    if (data.website) {\n      console.warn('Spam submission detected');\n      return;\n    }\n\n    setIsSubmitting(true);\n    \n    try {\n      // Track form submission\n      trackEvent('form_submit', 'contact', 'contact_form');\n      \n      // Simulate API call (replace with actual implementation)\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      toast({\n        title: \"Message sent successfully!\",\n        description: \"We'll send you a detailed audit within 24-48 hours.\",\n      });\n      \n      form.reset();\n    } catch (error) {\n      toast({\n        title: \"Error sending message\",\n        description: \"Please try again or contact us directly.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-8 rounded-2xl shadow-sm\">\n      <h3 className=\"font-sora font-semibold text-xl text-dark mb-6\">\n        Get Your Free Website Audit\n      </h3>\n      \n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        {/* Honeypot field */}\n        <input\n          type=\"text\"\n          {...form.register('website')}\n          className=\"hidden\"\n          tabIndex={-1}\n          autoComplete=\"off\"\n        />\n        \n        <div className=\"grid md:grid-cols-2 gap-4\">\n          <div>\n            <Label htmlFor=\"name\">Full Name *</Label>\n            <Input\n              id=\"name\"\n              {...form.register('name')}\n              placeholder=\"Your full name\"\n              className=\"mt-2\"\n            />\n            {form.formState.errors.name && (\n              <p className=\"text-sm text-destructive mt-1\">\n                {form.formState.errors.name.message}\n              </p>\n            )}\n          </div>\n          \n          <div>\n            <Label htmlFor=\"email\">Email Address *</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              {...form.register('email')}\n              placeholder=\"your@email.com\"\n              className=\"mt-2\"\n            />\n            {form.formState.errors.email && (\n              <p className=\"text-sm text-destructive mt-1\">\n                {form.formState.errors.email.message}\n              </p>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 gap-4\">\n          <div>\n            <Label htmlFor=\"company\">Company Name</Label>\n            <Input\n              id=\"company\"\n              {...form.register('company')}\n              placeholder=\"Your company\"\n              className=\"mt-2\"\n            />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"currentWebsite\">Current Website URL</Label>\n            <Input\n              id=\"currentWebsite\"\n              type=\"url\"\n              {...form.register('currentWebsite')}\n              placeholder=\"https://yourwebsite.com\"\n              className=\"mt-2\"\n            />\n            {form.formState.errors.currentWebsite && (\n              <p className=\"text-sm text-destructive mt-1\">\n                {form.formState.errors.currentWebsite.message}\n              </p>\n            )}\n          </div>\n        </div>\n        \n        <div>\n          <Label htmlFor=\"message\">Project Details *</Label>\n          <Textarea\n            id=\"message\"\n            {...form.register('message')}\n            placeholder=\"Tell us about your business and what you'd like to achieve with your website...\"\n            className=\"mt-2 min-h-24 resize-none\"\n          />\n          {form.formState.errors.message && (\n            <p className=\"text-sm text-destructive mt-1\">\n              {form.formState.errors.message.message}\n            </p>\n          )}\n          <div className=\"text-xs text-gray-text mt-1\">Minimum 20 characters</div>\n        </div>\n        \n        <Button\n          type=\"submit\"\n          disabled={isSubmitting}\n          className=\"w-full bg-primary hover:bg-blue-700 text-white py-4 px-6 rounded-lg font-semibold text-lg transition-colors\"\n        >\n          {isSubmitting ? (\n            'Sending...'\n          ) : (\n            <>\n              <Send className=\"mr-2 h-5 w-5\" />\n              Send My Free Audit Request\n            </>\n          )}\n        </Button>\n        \n        <p className=\"text-xs text-gray-text text-center\">\n          We'll send you a detailed Loom video audit within 24-48 hours\n        </p>\n      </form>\n    </div>\n  );\n}\n","size_bytes":5833},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/cta-button.tsx":{"content":"import { trackEvent } from '@/lib/analytics';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface CTAButtonProps {\n  children: React.ReactNode;\n  href?: string;\n  onClick?: () => void;\n  variant?: 'primary' | 'secondary' | 'outline';\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  eventLabel?: string;\n  icon?: React.ReactNode;\n}\n\nexport function CTAButton({\n  children,\n  href,\n  onClick,\n  variant = 'primary',\n  size = 'md',\n  className,\n  eventLabel,\n  icon,\n  ...props\n}: CTAButtonProps) {\n  \n  const handleClick = () => {\n    if (eventLabel) {\n      trackEvent('cta_click', 'engagement', eventLabel);\n    }\n    if (onClick) onClick();\n    if (href) {\n      if (href.startsWith('#')) {\n        const element = document.querySelector(href);\n        element?.scrollIntoView({ behavior: 'smooth' });\n      } else if (href.startsWith('http')) {\n        window.open(href, '_blank', 'noopener,noreferrer');\n      } else {\n        window.location.href = href;\n      }\n    }\n  };\n\n  const baseClasses = \"font-semibold transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\";\n  \n  const variantClasses = {\n    primary: \"bg-primary hover:bg-blue-700 text-white shadow-lg\",\n    secondary: \"bg-white hover:bg-gray-50 text-dark border-2 border-gray-200 hover:border-primary\",\n    outline: \"border-2 border-primary text-primary hover:bg-primary hover:text-white\"\n  };\n  \n  const sizeClasses = {\n    sm: \"px-4 py-2 text-sm rounded-lg\",\n    md: \"px-6 py-3 text-base rounded-xl\", \n    lg: \"px-8 py-4 text-lg rounded-2xl\"\n  };\n\n  return (\n    <Button\n      onClick={handleClick}\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        className\n      )}\n      {...props}\n    >\n      {icon && <span className=\"mr-2\">{icon}</span>}\n      {children}\n    </Button>\n  );\n}\n","size_bytes":1914},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/section-header.tsx":{"content":"interface SectionHeaderProps {\n  title: string;\n  subtitle?: string;\n  centered?: boolean;\n  className?: string;\n}\n\nexport function SectionHeader({ \n  title, \n  subtitle, \n  centered = true, \n  className = \"\" \n}: SectionHeaderProps) {\n  return (\n    <div className={`mb-16 ${centered ? 'text-center' : ''} ${className}`}>\n      <h2 className=\"text-3xl md:text-4xl font-sora font-bold text-dark mb-4\">\n        {title}\n      </h2>\n      {subtitle && (\n        <p className=\"text-lg text-gray-text max-w-2xl mx-auto\">\n          {subtitle}\n        </p>\n      )}\n    </div>\n  );\n}\n","size_bytes":576},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/seo-head.tsx":{"content":"import { useEffect } from 'react';\n\ninterface SEOHeadProps {\n  title?: string;\n  description?: string;\n  canonical?: string;\n  ogImage?: string;\n  ogType?: string;\n  twitterCard?: 'summary' | 'summary_large_image';\n  structuredData?: object;\n}\n\nexport function SEOHead({\n  title = \"WebRevamp Studio - Modern Website Redesigns for Growing Businesses\",\n  description = \"We transform outdated websites into modern, fast, mobile-first experiences. Professional website redesign, development, and maintenance services for Indian SMBs.\",\n  canonical,\n  ogImage = \"/og-image.jpg\",\n  ogType = \"website\",\n  twitterCard = \"summary_large_image\",\n  structuredData\n}: SEOHeadProps) {\n  \n  useEffect(() => {\n    // Set document title\n    document.title = title;\n    \n    // Set meta description\n    const metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (metaDescription) {\n      metaDescription.setAttribute('content', description);\n    } else {\n      const meta = document.createElement('meta');\n      meta.name = 'description';\n      meta.content = description;\n      document.head.appendChild(meta);\n    }\n    \n    // Set canonical URL\n    if (canonical) {\n      let canonicalLink = document.querySelector('link[rel=\"canonical\"]') as HTMLLinkElement;\n      if (canonicalLink) {\n        canonicalLink.href = canonical;\n      } else {\n        canonicalLink = document.createElement('link');\n        canonicalLink.rel = 'canonical';\n        canonicalLink.href = canonical;\n        document.head.appendChild(canonicalLink);\n      }\n    }\n    \n    // Set Open Graph tags\n    const setMetaProperty = (property: string, content: string) => {\n      let meta = document.querySelector(`meta[property=\"${property}\"]`) as HTMLMetaElement;\n      if (meta) {\n        meta.content = content;\n      } else {\n        meta = document.createElement('meta');\n        meta.setAttribute('property', property);\n        meta.content = content;\n        document.head.appendChild(meta);\n      }\n    };\n    \n    setMetaProperty('og:title', title);\n    setMetaProperty('og:description', description);\n    setMetaProperty('og:image', ogImage);\n    setMetaProperty('og:type', ogType);\n    if (canonical) setMetaProperty('og:url', canonical);\n    \n    // Set Twitter Card tags\n    const setMetaName = (name: string, content: string) => {\n      let meta = document.querySelector(`meta[name=\"${name}\"]`) as HTMLMetaElement;\n      if (meta) {\n        meta.content = content;\n      } else {\n        meta = document.createElement('meta');\n        meta.name = name;\n        meta.content = content;\n        document.head.appendChild(meta);\n      }\n    };\n    \n    setMetaName('twitter:card', twitterCard);\n    setMetaName('twitter:title', title);\n    setMetaName('twitter:description', description);\n    setMetaName('twitter:image', ogImage);\n    \n    // Add structured data\n    if (structuredData) {\n      let script = document.querySelector('script[type=\"application/ld+json\"]') as HTMLScriptElement;\n      if (script) {\n        script.textContent = JSON.stringify(structuredData);\n      } else {\n        script = document.createElement('script');\n        script.type = 'application/ld+json';\n        script.textContent = JSON.stringify(structuredData);\n        document.head.appendChild(script);\n      }\n    }\n    \n  }, [title, description, canonical, ogImage, ogType, twitterCard, structuredData]);\n  \n  return null;\n}\n","size_bytes":3403},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/theme-toggle.tsx":{"content":"import { Moon, Sun } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { Button } from '@/components/ui/button';\n\nexport function ThemeToggle() {\n  const { theme, toggleTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"sm\"\n      onClick={toggleTheme}\n      className=\"relative w-9 h-9 p-0 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n      aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} mode`}\n    >\n      <motion.div\n        initial={false}\n        animate={{\n          scale: theme === 'light' ? 1 : 0,\n          opacity: theme === 'light' ? 1 : 0,\n          rotate: theme === 'light' ? 0 : 180,\n        }}\n        transition={{ duration: 0.3, ease: \"easeInOut\" }}\n        className=\"absolute inset-0 flex items-center justify-center\"\n      >\n        <Sun className=\"h-4 w-4 text-yellow-500\" />\n      </motion.div>\n      \n      <motion.div\n        initial={false}\n        animate={{\n          scale: theme === 'dark' ? 1 : 0,\n          opacity: theme === 'dark' ? 1 : 0,\n          rotate: theme === 'dark' ? 0 : -180,\n        }}\n        transition={{ duration: 0.3, ease: \"easeInOut\" }}\n        className=\"absolute inset-0 flex items-center justify-center\"\n      >\n        <Moon className=\"h-4 w-4 text-blue-400\" />\n      </motion.div>\n    </Button>\n  );\n}","size_bytes":1389},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}